(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[     65850,       1322]
NotebookOptionsPosition[     63975,       1278]
NotebookOutlinePosition[     64385,       1295]
CellTagsIndexPosition[     64342,       1292]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Variational MonteCarlo", "Title",
 CellChangeTimes->{{3.7940747709981546`*^9, 3.7940747806434016`*^9}, 
   3.794078591709203*^9},ExpressionUUID->"df583bff-2228-4d65-9101-\
f3ec297283d4"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.7940748655323844`*^9, 
  3.7940748668017707`*^9}},ExpressionUUID->"d45367f4-02d0-4493-adb1-\
cf4740840e40"],

Cell["\<\
In nature, a physical system always tends to its state of lowest energy. In \
quantum mechanics, calculating the energy of such a state can be tricky, so \
simulations come to help.

This a Monte Carlo (Metropolis) algorithm which estimates the minimum energy \
of a physical system. A trial wavefunction depending on a parameter is used \
and said parameter can be changed in order to look for a minimum of the \
energy.\
\>", "Text",
 CellChangeTimes->{{3.794074782903289*^9, 3.7940748398433905`*^9}, {
  3.79515212982556*^9, 3.7951521893518543`*^9}, {3.7951630558882446`*^9, 
  3.795163274319358*^9}, {3.7951796970375404`*^9, 3.795179732414764*^9}, {
  3.795179773655816*^9, 3.795179775901722*^9}, {3.795180540377637*^9, 
  3.7951805751688843`*^9}, {3.7951806204178915`*^9, 
  3.795180628626357*^9}},ExpressionUUID->"94297a31-2c08-43d2-82b7-\
6046d0911ba0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Algorithm", "Section",
 CellChangeTimes->{{3.794074891073765*^9, 
  3.794074892613855*^9}},ExpressionUUID->"9d5a477d-380e-42bc-9bd6-\
84efd162a331"],

Cell[TextData[{
 "Harmonic oscillator with Hamiltonian ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "=", 
    RowBox[{
     FractionBox[
      SuperscriptBox["p", "2"], "2"], "+", 
     FractionBox[
      SuperscriptBox["x", "2"], "2"]}]}], TraditionalForm]],ExpressionUUID->
  "1ebb1101-de7d-41dd-83bd-b31e9d7107f2"],
 ". The lowest energy state is 0.5 electronvolts (eV) and is calculated by \
running a Metropolis algorithm."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.794074946209551*^9, 3.794075021776123*^9}, {
  3.7940764412889576`*^9, 3.794076441656245*^9}, {3.794164246745386*^9, 
  3.79416425055284*^9}, {3.794412641528672*^9, 3.7944126805846004`*^9}, {
  3.7951632821615543`*^9, 3.7951632849491405`*^9}, {3.795181474418786*^9, 
  3.795181481481513*^9}, {3.7951816672813697`*^9, 3.79518168503942*^9}, {
  3.7951997327629776`*^9, 3.795199824448223*^9}, {3.7953510258365254`*^9, 
  3.7953510304843297`*^9}},ExpressionUUID->"f9949a9f-0bde-4679-9908-\
e0a3f9ff8647"],

Cell[CellGroupData[{

Cell["Initialization", "Subsection",
 CellChangeTimes->{{3.7944125872855463`*^9, 
  3.794412596397993*^9}},ExpressionUUID->"a26ac1c8-e0de-4de7-9724-\
29dbb6704155"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\<C:\\\\Users\\\\Asus\\\\Desktop\\\\esempi mathematica\\\\fisica \
computazionale\\\\VMC\\\\vmc-init.wl\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7944127341030493`*^9, 3.794412784388208*^9}, 
   3.7944785496839294`*^9, {3.79447866825921*^9, 3.794478747929062*^9}, 
   3.7945097990484533`*^9, {3.7945101417557936`*^9, 3.7945101789705944`*^9}, 
   3.7953508186732273`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"e6b61e46-e2d7-4c14-8dcf-725733412a2d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulation", "Subsection",
 CellChangeTimes->{{3.7944126035849266`*^9, 3.794412609696191*^9}, {
  3.7953510003508325`*^9, 
  3.79535100430532*^9}},ExpressionUUID->"6c0a8e5e-8701-453c-91b9-\
33ff477fe7d0"],

Cell["\<\
Set the parameters and run the system by clicking on the \"update\" button.\
\>", "Text",
 CellChangeTimes->{{3.7951556278266044`*^9, 
  3.7951556686383944`*^9}},ExpressionUUID->"5b68438c-0f9b-4908-b039-\
7981b6e6769d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"update", ";", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "initialConf", ",", "time", ",", " ", "evol", ",", "var", ",", 
        "energy", ",", "error", ",", "textbox", ",", "pdf", ",", 
        "energyplot"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"initialConf", "=", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "\[Alpha]"}], ",", "\[Alpha]"}], "}"}], ",", 
          "walkers"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"time", ",", "evol"}], "}"}], "=", 
        RowBox[{"Timing", "[", 
         RowBox[{"metropolisTotal", "[", 
          RowBox[{
           RowBox[{"metropolisTherm", "[", 
            RowBox[{"initialConf", ",", "walkers", ",", 
             RowBox[{"Ceiling", "[", 
              RowBox[{"0.2", "*", "steps"}], "]"}], ",", "\[Alpha]"}], "]"}], 
           ",", "steps", ",", "\[Alpha]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"var", ",", "energy"}], "}"}], "=", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Harmosc", "[", 
                   RowBox[{"#", ",", "\[Alpha]"}], "]"}], ")"}], "^", "2"}], 
                ",", 
                RowBox[{"Harmosc", "[", 
                 RowBox[{"#", ",", "\[Alpha]"}], "]"}]}], "}"}], "/", 
              RowBox[{"(", 
               RowBox[{"walkers", "*", "steps"}], ")"}]}], "&"}], ",", "evol",
             ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "2"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"error", "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"var", "-", 
            RowBox[{"energy", "^", "2"}]}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"walkers", "*", "steps"}], ")"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"textbox", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{
             "\"\<Wavefunction: \
\!\(TraditionalForm\`\(TraditionalForm\`\*RadicalBox[FractionBox[\(2\\\ \
\[Alpha]\), \(\[Pi]\)], \(4\)]\\\ \*SuperscriptBox[\(e\), \(\(-\[Alpha]\)\\\ \
\*SuperscriptBox[\(x\), \(2\)]\)]\)\) | Energy (eV): \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"energy", ",", "0.0001"}], "]"}], "]"}], "<>", 
              "\"\< \[PlusMinus] \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"error", ",", "0.0001"}], "]"}], "]"}], "<>", 
              "\"\< | Computer time: \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"time", ",", "0.001"}], "]"}], "]"}], "<>", 
              "\"\< s\>\""}], ",", "15"}], "]"}], "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1000", ",", "50"}], "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"pdf", "=", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}], "*", 
                   "0.751126"}], "]"}], "^", "2"}], ",", "Thick"}], "]"}], 
              ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Psi]", "[", 
                   RowBox[{"x", ",", "\[Alpha]"}], "]"}], ")"}], "^", "2"}], 
                ",", "Thick", ",", "Dashed"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{
               RowBox[{"-", "2"}], "/", 
               RowBox[{"Sqrt", "[", "\[Alpha]", "]"}]}], ",", 
              RowBox[{"2", "/", 
               RowBox[{"Sqrt", "[", "\[Alpha]", "]"}]}]}], "}"}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<Exact PDF\>\"", ",", "\"\<Trial PDF\>\""}], 
              "}"}]}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<x\>\"", ",", "\"\<Probability\>\""}], "}"}]}], ",", 
            RowBox[{
            "PlotLabel", "->", 
             "\"\<Trial and exact Probability Density Functions \
(PDF)\>\""}]}], "]"}], ",", 
          RowBox[{"Histogram", "[", 
           RowBox[{
            RowBox[{"Flatten", "@", "evol"}], ",", "Automatic", ",", 
            "\"\<Probability\>\"", ",", 
            RowBox[{"ChartLegends", "\[Rule]", 
             RowBox[{"{", "\"\<Walkers\>\"", "}"}]}]}], "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"energyplot", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Callout", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0.5"}], "}"}], ",", "\"\<Exact Energy\>\"", 
              ",", "Right"}], "]"}], ",", 
            RowBox[{"Callout", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"Around", "[", 
                   RowBox[{"energy", ",", "error"}], "]"}]}], "}"}], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{
                    {GrayLevel[0], RectangleBox[{0, 0}]}, 
                    {GrayLevel[0], RectangleBox[{1, -1}]}, 
                    {RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}},
                    AspectRatio->1,
                    DefaultBaseStyle->"ColorSwatchGraphics",
                    Frame->True,
                    
                    FrameStyle->RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668],
                    FrameTicks->None,
                    
                    ImageSize->
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                    PlotRangePadding->None],
                   StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]],
                  Appearance->None,
                  BaseStyle->{},
                  BaselinePosition->Baseline,
                  ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                  DefaultBaseStyle->{},
                  Evaluator->Automatic,
                  Method->"Preemptive"],
                 RGBColor[0.880722, 0.611041, 0.142051],
                 Editable->False,
                 Selectable->False]}], "]"}], ",", "\"\<Calc. Energy\>\"", 
              ",", "Right"}], "]"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"0.5", ",", "energy"}], "]"}], "-", "error"}], 
                ")"}], ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Max", "[", 
                  RowBox[{"0.5", ",", "energy"}], "]"}], "+", "error"}], 
                ")"}]}], "}"}]}], "}"}]}], ",", 
          RowBox[{"Axes", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"False", ",", "True"}], "}"}]}], ",", " ", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Gray", ",", 
             RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"200", ",", "500"}], "}"}]}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"PointSize", "[", "Large", "]"}]}], ",", 
          RowBox[{"PlotRangePadding", "->", 
           RowBox[{"Scaled", "[", ".05", "]"}]}], ",", 
          RowBox[{"IntervalMarkersStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.880722, 0.611041, 0.142051], 
                  RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.587148, 0.40736066666666665`, 0.09470066666666668],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}], 
                  "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.880722, 0.611041, 0.142051]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.880722, 0.611041, 0.142051],
             Editable->False,
             Selectable->False], "]"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<Calculated and exact energy (eV)\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"textbox", ",", "SpanFromLeft"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"energyplot", ",", "pdf"}], "}"}]}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Value of the parameter\>\"", ",", "12"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1.", ",", "\"\<\[Alpha]\>\""}], "}"}], ",", 
     "0.1", ",", "2.", ",", "0.1", ",", " ", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Number of steps for each walker\>\"", ",", "12"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"steps", ",", "1000", ",", "\"\<Steps\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1000", ",", "10000", ",", "100000"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Number of walkers\>\"", ",", "12"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"walkers", ",", "100", ",", "\"\<Walkers\>\""}], "}"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"100", ",", "500", ",", "50"}], "]"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", "Slider"}], ",", " ", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Update\>\"", ",", 
     RowBox[{"update", "=", 
      RowBox[{"1", "-", "update"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"update", ",", "0"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
    RowBox[{"{", "update", "}"}]}], ",", " ", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.794075023321025*^9, 3.7940750622360077`*^9}, {
   3.7940751444940257`*^9, 3.794075160893141*^9}, {3.794075197964095*^9, 
   3.7940752573309665`*^9}, {3.7940753220413065`*^9, 
   3.7940753319683385`*^9}, {3.794075455522884*^9, 3.7940754556675572`*^9}, {
   3.7940756739046483`*^9, 3.794075697617118*^9}, {3.79407606746049*^9, 
   3.7940760909506655`*^9}, {3.7940761503248196`*^9, 3.794076156930638*^9}, {
   3.7940762542705536`*^9, 3.794076256993156*^9}, {3.7940763654893866`*^9, 
   3.794076366678819*^9}, {3.794076516836556*^9, 3.794076727592744*^9}, {
   3.794076831352027*^9, 3.7940768508454404`*^9}, {3.794076889071988*^9, 
   3.79407688916005*^9}, {3.7940773490917964`*^9, 3.7940776020291843`*^9}, {
   3.794077635924317*^9, 3.7940778025533247`*^9}, {3.7940781311173816`*^9, 
   3.7940781826671715`*^9}, {3.7940782412116404`*^9, 
   3.7940782464625635`*^9}, {3.794078290622569*^9, 3.794078321712261*^9}, {
   3.794078356393632*^9, 3.794078381259989*^9}, {3.794078415263974*^9, 
   3.794078426962544*^9}, {3.794078463311809*^9, 3.794078471738688*^9}, {
   3.79415003379287*^9, 3.794150033877594*^9}, {3.7941500791509748`*^9, 
   3.7941500855414658`*^9}, {3.794150120879961*^9, 3.7941501254113684`*^9}, {
   3.794150188118267*^9, 3.7941502186098504`*^9}, {3.7941504734563303`*^9, 
   3.7941504769500995`*^9}, {3.7941508356113005`*^9, 3.794150838134658*^9}, {
   3.7941511714541683`*^9, 3.7941512398462305`*^9}, {3.7941514726298265`*^9, 
   3.7941514823214407`*^9}, {3.7941598216931753`*^9, 
   3.7941598231587086`*^9}, {3.794160300971103*^9, 3.794160321311239*^9}, {
   3.79416182596496*^9, 3.794161826098518*^9}, {3.7941629201889815`*^9, 
   3.794162925791118*^9}, {3.794162962515371*^9, 3.7941629907158623`*^9}, {
   3.794163564199422*^9, 3.794163567620124*^9}, {3.7941637211710443`*^9, 
   3.794163724372719*^9}, {3.7941637780995245`*^9, 3.794163799709544*^9}, {
   3.794163888193765*^9, 3.794163888317568*^9}, {3.7941644036749344`*^9, 
   3.794164407172233*^9}, {3.7941645592599773`*^9, 3.794164594679186*^9}, {
   3.794165414922337*^9, 3.794165426440217*^9}, {3.7941655209578395`*^9, 
   3.7941655785056562`*^9}, {3.794165783730796*^9, 3.794165788304181*^9}, 
   3.794166242500736*^9, {3.7941663005933046`*^9, 3.794166328045366*^9}, {
   3.794166990739281*^9, 3.7941670050795355`*^9}, 3.794167158668695*^9, {
   3.794167373969386*^9, 3.7941673771850433`*^9}, {3.7941674448648343`*^9, 
   3.7941674504990206`*^9}, {3.7941675905827413`*^9, 
   3.7941676659563537`*^9}, {3.7941678257353835`*^9, 3.794167847037817*^9}, {
   3.794241109148568*^9, 3.7942411489417777`*^9}, {3.7942422543550243`*^9, 
   3.794242255066224*^9}, {3.794242387025158*^9, 3.794242387223749*^9}, {
   3.794242449610018*^9, 3.7942426329569244`*^9}, {3.794242683394842*^9, 
   3.7942426839400682`*^9}, {3.794242844425728*^9, 3.7942429609374914`*^9}, {
   3.7942430953246813`*^9, 3.794243122245*^9}, {3.7942431811177793`*^9, 
   3.7942432758637342`*^9}, {3.7942433325822153`*^9, 
   3.7942433794870267`*^9}, {3.794243415607538*^9, 3.794243450888275*^9}, {
   3.7942434851453257`*^9, 3.7942435934640837`*^9}, {3.7942436470017204`*^9, 
   3.7942436695417213`*^9}, {3.7942437314681664`*^9, 
   3.7942437346373353`*^9}, {3.7942438329596424`*^9, 3.7942439139402347`*^9}, 
   3.794244050892416*^9, {3.79424419508307*^9, 3.7942441966768646`*^9}, {
   3.7942444458326273`*^9, 3.7942444473642435`*^9}, {3.794244487048212*^9, 
   3.7942446380173745`*^9}, {3.7942446855676656`*^9, 
   3.7942447087442436`*^9}, {3.7942447487766943`*^9, 3.79424475011262*^9}, {
   3.7942447837977605`*^9, 3.7942450264790993`*^9}, {3.7942450914225903`*^9, 
   3.7942451021640034`*^9}, {3.7942451340413923`*^9, 
   3.7942451399615226`*^9}, {3.794245229330927*^9, 3.7942452296936836`*^9}, 
   3.7942452895203543`*^9, 3.794245417661866*^9, 3.794245471503107*^9, 
   3.7942455531528893`*^9, {3.7942455893137226`*^9, 3.794245589766888*^9}, 
   3.7942456264942045`*^9, {3.7942456573822145`*^9, 3.7942458233796463`*^9}, {
   3.794245871385419*^9, 3.79424588224792*^9}, {3.7942459371319704`*^9, 
   3.7942460335022326`*^9}, {3.794246065886097*^9, 3.7942460717086053`*^9}, {
   3.794246185128069*^9, 3.794246227282908*^9}, {3.7942463150503473`*^9, 
   3.7942463165202794`*^9}, {3.7942463560536275`*^9, 3.794246391902522*^9}, {
   3.79424659629967*^9, 3.794246638801118*^9}, {3.794246767857566*^9, 
   3.7942468126904335`*^9}, {3.794246894067385*^9, 3.7942470159736843`*^9}, {
   3.7942470792577252`*^9, 3.7942471473682866`*^9}, {3.794247363628134*^9, 
   3.794247423550358*^9}, {3.7942475056320972`*^9, 3.7942475058057203`*^9}, {
   3.7942475894389677`*^9, 3.7942477567912173`*^9}, {3.7942478074881945`*^9, 
   3.7942479060553017`*^9}, {3.794249053700207*^9, 3.794249075579113*^9}, {
   3.7942494251749325`*^9, 3.794249456160655*^9}, {3.7942890308022976`*^9, 
   3.7942891151295557`*^9}, {3.794289184319215*^9, 3.7942892236584215`*^9}, {
   3.794289526465852*^9, 3.7942895748411074`*^9}, {3.794289633592449*^9, 
   3.7942896606608667`*^9}, {3.7942897146257114`*^9, 3.794289715644432*^9}, {
   3.7942899969180593`*^9, 3.794290093701586*^9}, {3.7942902383401775`*^9, 
   3.7942903255225344`*^9}, {3.7942903570686045`*^9, 
   3.7942903851432714`*^9}, {3.7942927409676123`*^9, 3.794292812077641*^9}, {
   3.7942929048828893`*^9, 3.794292920847038*^9}, {3.794292979670204*^9, 
   3.79429298512345*^9}, 3.7942930588344755`*^9, {3.7942932261910458`*^9, 
   3.794293227331929*^9}, {3.7942933496132607`*^9, 3.7942933698607435`*^9}, {
   3.7942936616641455`*^9, 3.794293723145271*^9}, {3.794293833747201*^9, 
   3.7942938472829695`*^9}, 3.794294113646682*^9, {3.7942942247113724`*^9, 
   3.794294302451768*^9}, {3.7942957231061535`*^9, 3.794295746935503*^9}, {
   3.7942959905834856`*^9, 3.7942960096016717`*^9}, {3.7942960461471243`*^9, 
   3.7942961731549435`*^9}, {3.794296325741343*^9, 3.7942963604302225`*^9}, {
   3.7942964354898043`*^9, 3.7942964356685343`*^9}, {3.794296527761074*^9, 
   3.794296568983444*^9}, {3.7942968126411943`*^9, 3.7942968217219024`*^9}, {
   3.794296887166829*^9, 3.7942968963421144`*^9}, {3.794297071698885*^9, 
   3.7942970762139025`*^9}, {3.794297109092739*^9, 3.7942971302661357`*^9}, {
   3.794297183958249*^9, 3.7942971883330345`*^9}, {3.7942997884753113`*^9, 
   3.7942998953150015`*^9}, {3.7942999590014143`*^9, 3.794300067844986*^9}, {
   3.794301746042501*^9, 3.7943017597549562`*^9}, {3.7943017931527853`*^9, 
   3.7943018823452945`*^9}, {3.7943019131070733`*^9, 
   3.7943019797677774`*^9}, {3.794302047613288*^9, 3.7943020638821707`*^9}, {
   3.7943021468906417`*^9, 3.794302231806332*^9}, {3.7943022668385124`*^9, 
   3.794302270409498*^9}, {3.7943023521763263`*^9, 3.7943023555633945`*^9}, {
   3.7943023865826006`*^9, 3.7943023919458723`*^9}, {3.794302433713296*^9, 
   3.7943025064559245`*^9}, {3.7943025472860837`*^9, 
   3.7943025571330986`*^9}, {3.7943026151197057`*^9, 
   3.7943026783049245`*^9}, {3.794302722767722*^9, 3.7943027260063953`*^9}, {
   3.7943225010964513`*^9, 3.794322519480183*^9}, {3.794322585762866*^9, 
   3.7943226213609114`*^9}, {3.7943227729493017`*^9, 3.794322919482705*^9}, {
   3.7943229646906953`*^9, 3.7943229672467732`*^9}, {3.794323074617155*^9, 
   3.7943230824004993`*^9}, {3.7943231265898685`*^9, 
   3.7943231509320183`*^9}, {3.794323200750581*^9, 3.7943232250003843`*^9}, {
   3.794323271281715*^9, 3.7943232725905514`*^9}, {3.7943233169202557`*^9, 
   3.7943233805903425`*^9}, {3.7943234146999483`*^9, 3.79432341686425*^9}, {
   3.794323495303859*^9, 3.7943235021368766`*^9}, 3.794323533959342*^9, {
   3.794323617085741*^9, 3.794323684366232*^9}, {3.7943237154725504`*^9, 
   3.7943237162832036`*^9}, {3.794323755791996*^9, 3.7943238632125115`*^9}, {
   3.794323925950632*^9, 3.794324259571686*^9}, {3.794324320541399*^9, 
   3.794324410904411*^9}, {3.7943244514981346`*^9, 3.7943245811772976`*^9}, {
   3.7943246303423977`*^9, 3.7943246526186886`*^9}, {3.7943247625356393`*^9, 
   3.7943248027298913`*^9}, {3.7943248698041334`*^9, 
   3.7943249053223763`*^9}, {3.794324943684574*^9, 3.7943249453332343`*^9}, {
   3.7943250170922832`*^9, 3.7943250392911243`*^9}, {3.7943251206444483`*^9, 
   3.7943252973803825`*^9}, {3.794325333801406*^9, 3.7943253454124327`*^9}, {
   3.7943255458131227`*^9, 3.794325630530289*^9}, {3.7943257781852627`*^9, 
   3.794325781102934*^9}, {3.7943258171983347`*^9, 3.794325817530059*^9}, {
   3.794325908420596*^9, 3.794326074760212*^9}, {3.794326108424459*^9, 
   3.7943261371919084`*^9}, {3.794326176446311*^9, 3.794326183112543*^9}, {
   3.7943263593142605`*^9, 3.7943263660254226`*^9}, {3.7943264591314554`*^9, 
   3.7943266094417114`*^9}, {3.794326686429493*^9, 3.794326686519698*^9}, {
   3.794327319145133*^9, 3.7943273193853035`*^9}, {3.7943273934874215`*^9, 
   3.794327443161497*^9}, {3.794327484144809*^9, 3.7943275068990755`*^9}, 
   3.794327639843171*^9, {3.79432770998251*^9, 3.7943277513002634`*^9}, 
   3.794327907668624*^9, {3.7943307930367546`*^9, 3.794330799716744*^9}, {
   3.7943802768865185`*^9, 3.7943802857017684`*^9}, {3.7943803210336895`*^9, 
   3.794380346823718*^9}, {3.794380433694084*^9, 3.794380434533285*^9}, {
   3.7943806722811356`*^9, 3.7943806966094294`*^9}, {3.7943807457763805`*^9, 
   3.7943807882783203`*^9}, {3.7943808489618235`*^9, 
   3.7943808634264016`*^9}, {3.7943809648633785`*^9, 
   3.7943810608489323`*^9}, {3.794381106580268*^9, 3.794381131311922*^9}, {
   3.7943812597321296`*^9, 3.7943812608423615`*^9}, {3.794381341186408*^9, 
   3.7943813896261826`*^9}, {3.7943816791823225`*^9, 3.794381817220928*^9}, {
   3.794381926278661*^9, 3.794381943369405*^9}, {3.7943820053503637`*^9, 
   3.7943821368370275`*^9}, {3.7943821773121505`*^9, 3.794382209891501*^9}, {
   3.794382245537305*^9, 3.794382347658084*^9}, {3.79438239444134*^9, 
   3.7943825331702433`*^9}, {3.7944011019558277`*^9, 3.79440110823983*^9}, {
   3.7944011422693415`*^9, 3.794401152411275*^9}, {3.794401218737893*^9, 
   3.7944012456222763`*^9}, {3.7944014076199055`*^9, 
   3.7944014293856173`*^9}, {3.7944015774448805`*^9, 3.794401585329549*^9}, {
   3.7944016696071615`*^9, 3.794401706441964*^9}, {3.7944017478419275`*^9, 
   3.794401904209921*^9}, {3.7944019443681555`*^9, 3.7944020401679363`*^9}, {
   3.794402189279728*^9, 3.794402207299498*^9}, {3.794402254537033*^9, 
   3.794402300772422*^9}, {3.7944023535543404`*^9, 3.7944025186477785`*^9}, {
   3.7944025587938232`*^9, 3.794402596223173*^9}, {3.7944026384958324`*^9, 
   3.7944027154183207`*^9}, {3.794402755661878*^9, 3.7944027811639843`*^9}, {
   3.794402813733382*^9, 3.7944028649531965`*^9}, {3.794403079523735*^9, 
   3.794403080774191*^9}, {3.794403594758745*^9, 3.7944035997499857`*^9}, {
   3.794403796388719*^9, 3.7944039124214697`*^9}, {3.794404099827711*^9, 
   3.7944041515415545`*^9}, {3.7944041959456873`*^9, 
   3.7944042228888264`*^9}, {3.794404372607792*^9, 3.7944044448996305`*^9}, {
   3.7944044931315947`*^9, 3.794404519707987*^9}, 3.7944045696243963`*^9, {
   3.7944046258198347`*^9, 3.794404641394828*^9}, {3.794404727706337*^9, 
   3.794404731620592*^9}, {3.794404884441596*^9, 3.79440488589511*^9}, {
   3.794404936553591*^9, 3.794404964567678*^9}, {3.794405004874757*^9, 
   3.7944050788725767`*^9}, {3.7944053263222246`*^9, 
   3.7944053382713075`*^9}, {3.7944053966779566`*^9, 3.7944053990289*^9}, {
   3.794405435673131*^9, 3.7944054515002065`*^9}, {3.794405542059767*^9, 
   3.7944056314983253`*^9}, {3.7944057333498983`*^9, 3.794405843067191*^9}, {
   3.7944059317968936`*^9, 3.7944059485466433`*^9}, {3.7944060556318507`*^9, 
   3.7944061039567065`*^9}, {3.7944061692763815`*^9, 3.794406170215391*^9}, {
   3.7944064587033143`*^9, 3.79440650924984*^9}, {3.7944067175368605`*^9, 
   3.7944068515191307`*^9}, {3.794406888159591*^9, 3.7944069258018656`*^9}, {
   3.7944069688125453`*^9, 3.7944070096899214`*^9}, {3.79440707580485*^9, 
   3.794407157623371*^9}, {3.794407379873761*^9, 3.7944074500104294`*^9}, {
   3.794407833262391*^9, 3.794408093450365*^9}, {3.7944083089845695`*^9, 
   3.794408406866364*^9}, {3.7944084373109045`*^9, 3.7944084456673794`*^9}, {
   3.7944084798064175`*^9, 3.7944084988273664`*^9}, {3.7944085922437572`*^9, 
   3.7944086379131765`*^9}, {3.7944086961496572`*^9, 
   3.7944087706160517`*^9}, {3.7944088089009404`*^9, 
   3.7944088277858667`*^9}, {3.794408867523954*^9, 3.7944088711839027`*^9}, {
   3.7944089101466565`*^9, 3.794409044891865*^9}, {3.7944090755305624`*^9, 
   3.7944091049328394`*^9}, {3.794409289577469*^9, 3.7944093127490644`*^9}, {
   3.794409417749934*^9, 3.7944094952464824`*^9}, {3.794409797625738*^9, 
   3.794409848625046*^9}, {3.7944098833904314`*^9, 3.794409894024977*^9}, {
   3.794409934017247*^9, 3.794409997958613*^9}, {3.794410109533535*^9, 
   3.794410197018094*^9}, {3.7944102892767553`*^9, 3.7944102900738196`*^9}, {
   3.794410326445093*^9, 3.79441034689072*^9}, {3.7944104264548416`*^9, 
   3.794410633007468*^9}, 3.794410785543154*^9, {3.7944108626220245`*^9, 
   3.79441092892791*^9}, {3.794410969641927*^9, 3.7944109767330008`*^9}, {
   3.794411237693473*^9, 3.794411420096732*^9}, {3.794411463820449*^9, 
   3.7944114666142364`*^9}, {3.7944115919684215`*^9, 3.79441159466306*^9}, {
   3.794411662288178*^9, 3.7944116796192527`*^9}, {3.794411733309764*^9, 
   3.794411742327389*^9}, {3.7944117850214453`*^9, 3.794411791199911*^9}, {
   3.7944118218292828`*^9, 3.794411844676048*^9}, {3.794411915598846*^9, 
   3.7944119745985785`*^9}, 3.7944120786567044`*^9, 3.794412341440835*^9, {
   3.7944126141405497`*^9, 3.794412614528173*^9}, {3.794490755453929*^9, 
   3.7944907593329334`*^9}, {3.794491598093878*^9, 3.794491604317552*^9}, {
   3.7944916515660686`*^9, 3.794491668817317*^9}, {3.794495944936941*^9, 
   3.7944960000699244`*^9}, {3.7944962133836203`*^9, 3.7944962426563587`*^9}, 
   3.794504311734398*^9, {3.7945052566639357`*^9, 3.7945052628951187`*^9}, {
   3.794506037948389*^9, 3.794506040990896*^9}, 3.794508618633066*^9, {
   3.794508661713539*^9, 3.7945087037269278`*^9}, {3.794508741376145*^9, 
   3.7945087802207375`*^9}, {3.794509416940812*^9, 3.7945094518716407`*^9}, {
   3.794509676589303*^9, 3.7945096789467897`*^9}, {3.79450973228701*^9, 
   3.7945097680205727`*^9}, {3.794509875065719*^9, 3.7945099232006297`*^9}, {
   3.7945100140449204`*^9, 3.794510071535179*^9}, 3.7945101310079107`*^9, {
   3.7945103234879403`*^9, 3.7945103236095276`*^9}, {3.794510902321702*^9, 
   3.794510905745367*^9}, 3.7945109825957594`*^9, {3.7945146683544617`*^9, 
   3.7945147365769615`*^9}, {3.794541343103027*^9, 3.794541343626485*^9}, {
   3.7945425827569885`*^9, 3.794542584925383*^9}, {3.794543809764594*^9, 
   3.7945438132237606`*^9}, {3.7945444976721945`*^9, 
   3.7945445041761503`*^9}, {3.794544694101823*^9, 3.7945446953870745`*^9}, 
   3.794544796996902*^9, 3.7945462676595573`*^9, {3.794546393016879*^9, 
   3.7945463991923714`*^9}, {3.7945466043674183`*^9, 
   3.7945466055738463`*^9}, {3.794629062755192*^9, 3.7946291113899198`*^9}, 
   3.7946291723112555`*^9, 3.794629824554199*^9, {3.7946298549943976`*^9, 
   3.7946298585723715`*^9}, {3.79516333141562*^9, 3.795163332132132*^9}, {
   3.7951636780442314`*^9, 3.795163769922923*^9}, {3.7951802980852194`*^9, 
   3.7951802997754817`*^9}, 3.7951808491034584`*^9, {3.795180906106044*^9, 
   3.7951809263051662`*^9}, {3.795181209567337*^9, 3.795181227788031*^9}, {
   3.795181261599908*^9, 3.795181264696986*^9}, {3.795181432981436*^9, 
   3.7951814464281397`*^9}, 3.7951818501872473`*^9, {3.7951819602626104`*^9, 
   3.795182019813794*^9}, {3.7951820575246754`*^9, 3.7951821372248898`*^9}, {
   3.7951822111363797`*^9, 3.795182218320965*^9}, {3.795182313569061*^9, 
   3.795182314932681*^9}, {3.795182367981514*^9, 3.795182443639016*^9}, {
   3.7951824906402426`*^9, 3.7951825164454603`*^9}, {3.7951825508636785`*^9, 
   3.795182564651931*^9}, {3.7951826155509586`*^9, 3.7951826171666183`*^9}, {
   3.7951826556535673`*^9, 3.7951826764906673`*^9}, {3.795182720905277*^9, 
   3.7951828806464295`*^9}, {3.795183034822382*^9, 3.7951830731251793`*^9}, {
   3.7951831095253735`*^9, 3.7951831352727337`*^9}, {3.795183271630817*^9, 
   3.795183333336423*^9}, {3.795183469423593*^9, 3.795183522955713*^9}, {
   3.7951835783369923`*^9, 3.795183581021082*^9}, {3.7951837050447445`*^9, 
   3.7951837051418004`*^9}, {3.795183737120079*^9, 3.795183757206189*^9}, {
   3.7951838039321003`*^9, 3.795183812501598*^9}, {3.7951839397958937`*^9, 
   3.7951839448920026`*^9}, {3.795187182431909*^9, 3.795187195824092*^9}, 
   3.7951874361031446`*^9, {3.795199630505447*^9, 3.795199654321271*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"60eb4dc3-f71f-481f-8b58-0947afc0514b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`steps$$ = 1000, $CellContext`update$$ = 
    0, $CellContext`walkers$$ = 100, $CellContext`\[Alpha]$$ = 1., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Style["Value of the parameter", 12]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Alpha]$$], 1., "\[Alpha]"}, 0.1, 2., 0.1}, {
      Hold[
       Style["Number of steps for each walker", 12]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`steps$$], 1000, "Steps"}, {1000, 10000, 100000}}, {
      Hold[
       Style["Number of walkers", 12]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`walkers$$], 100, "Walkers"}, {100, 150, 200, 250, 
      300, 350, 400, 450, 500}}, {
      Hold[
       Button[
       "Update", $CellContext`update$$ = 1 - $CellContext`update$$, ImageSize -> 
        Large]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`update$$], 0}}}, Typeset`size$$ = {
    1025., {256., 263.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$6517$$ = 
    0, $CellContext`steps$6518$$ = 0, $CellContext`walkers$6519$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`steps$$ = 1000, $CellContext`update$$ = 
        0, $CellContext`walkers$$ = 100, $CellContext`\[Alpha]$$ = 1.}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$6517$$, 0], 
        Hold[$CellContext`steps$$, $CellContext`steps$6518$$, 0], 
        Hold[$CellContext`walkers$$, $CellContext`walkers$6519$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`update$$; 
       Module[{$CellContext`initialConf$, $CellContext`time$, \
$CellContext`evol$, $CellContext`var$, $CellContext`energy$, \
$CellContext`error$, $CellContext`textbox$, $CellContext`pdf$, \
$CellContext`energyplot$}, $CellContext`initialConf$ = 
          RandomReal[{-$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$$}, \
$CellContext`walkers$$]; {$CellContext`time$, $CellContext`evol$} = Timing[
            $CellContext`metropolisTotal[
             $CellContext`metropolisTherm[$CellContext`initialConf$, \
$CellContext`walkers$$, 
              Ceiling[
              0.2 $CellContext`steps$$], $CellContext`\[Alpha]$$], \
$CellContext`steps$$, $CellContext`\[Alpha]$$]]; {$CellContext`var$, \
$CellContext`energy$} = Total[
            Map[{$CellContext`Harmosc[#, $CellContext`\[Alpha]$$]^2, 
               $CellContext`Harmosc[#, \
$CellContext`\[Alpha]$$]}/($CellContext`walkers$$ $CellContext`steps$$)& , \
$CellContext`evol$, {2}], 2]; $CellContext`error$ = 
          Sqrt[Abs[$CellContext`var$ - \
$CellContext`energy$^2]/($CellContext`walkers$$ $CellContext`steps$$)]; \
$CellContext`textbox$ = Graphics[
            Text[
             Style[
              StringJoin[
              "Wavefunction: \
\!\(TraditionalForm\`\(TraditionalForm\`\*RadicalBox[FractionBox[\(2\\ \
\[Alpha]\), \(\[Pi]\)], \(4\)]\\ \*SuperscriptBox[\(e\), \(\(-\[Alpha]\)\\ \
\*SuperscriptBox[\(x\), \(2\)]\)]\)\) | Energy (eV): ", 
               ToString[
                Round[$CellContext`energy$, 0.0001]], " \[PlusMinus] ", 
               ToString[
                Round[$CellContext`error$, 0.0001]], " | Computer time: ", 
               ToString[
                Round[$CellContext`time$, 0.001]], " s"], 15]], 
            ImageSize -> {1000, 50}]; $CellContext`pdf$ = Show[
            Plot[{
              Style[Abs[Exp[(-$CellContext`x^2)/2] 0.751126]^2, Thick], 
              
              Style[$CellContext`\[Psi][$CellContext`x, \
$CellContext`\[Alpha]$$]^2, Thick, Dashed]}, {$CellContext`x, (-2)/
              Sqrt[$CellContext`\[Alpha]$$], 2/Sqrt[$CellContext`\[Alpha]$$]},
              PlotLegends -> {"Exact PDF", "Trial PDF"}, 
             AxesLabel -> {"x", "Probability"}, PlotLabel -> 
             "Trial and exact Probability Density Functions (PDF)"], 
            Histogram[
             Flatten[$CellContext`evol$], Automatic, "Probability", 
             ChartLegends -> {"Walkers"}], ImageSize -> 
            800]; $CellContext`energyplot$ = ListPlot[{
             Callout[{0, 0.5}, "Exact Energy", Right], 
             Callout[
              Style[{0, 
                Around[$CellContext`energy$, $CellContext`error$]}, 
               RGBColor[0.880722, 0.611041, 0.142051]], "Calc. Energy", 
              Right]}, 
            PlotRange -> {
             Automatic, {
              Min[0.5, $CellContext`energy$] - $CellContext`error$, 
               Max[0.5, $CellContext`energy$] + $CellContext`error$}}, 
            Axes -> {False, True}, AxesStyle -> Directive[Gray, 
              Opacity[0.4]], ImageSize -> {200, 500}, AspectRatio -> Full, 
            PlotStyle -> PointSize[Large], PlotRangePadding -> Scaled[0.05], 
            IntervalMarkersStyle -> Directive[
              RGBColor[0.880722, 0.611041, 0.142051]], PlotLabel -> 
            "Calculated and exact energy (eV)"]; 
         Grid[{{$CellContext`textbox$, 
             SpanFromLeft}, {$CellContext`energyplot$, $CellContext`pdf$}}]]),
       "Specifications" :> {
        Style[
        "Value of the parameter", 
         12], {{$CellContext`\[Alpha]$$, 1., "\[Alpha]"}, 0.1, 2., 0.1, 
         Appearance -> "Labeled"}, Delimiter, 
        Style[
        "Number of steps for each walker", 
         12], {{$CellContext`steps$$, 1000, "Steps"}, {1000, 10000, 100000}}, 
        Delimiter, 
        Style[
        "Number of walkers", 12], {{$CellContext`walkers$$, 100, "Walkers"}, {
         100, 150, 200, 250, 300, 350, 400, 450, 500}, ControlType -> Slider, 
         Appearance -> "Labeled"}, Delimiter, 
        Button[
        "Update", $CellContext`update$$ = 1 - $CellContext`update$$, 
         ImageSize -> Large], {{$CellContext`update$$, 0}, ControlType -> 
         None}}, "Options" :> {
       TrackedSymbols :> {$CellContext`update$$}, ControlPlacement -> Left}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1347., {285., 292.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7951821819994135`*^9, 3.7951822188843374`*^9, {3.795182377716074*^9, 
   3.795182401156396*^9}, 3.795182445070407*^9, 3.795182496836105*^9, {
   3.7951825577905874`*^9, 3.795182578876174*^9}, 3.795182617571185*^9, {
   3.7951826576348305`*^9, 3.795182676800501*^9}, {3.7951827323957596`*^9, 
   3.7951827470608463`*^9}, {3.795182806770795*^9, 3.7951828134651356`*^9}, {
   3.79518284871851*^9, 3.7951828682907734`*^9}, {3.7951830202394977`*^9, 
   3.795183037281211*^9}, 3.7951831357602673`*^9, {3.7951832837133565`*^9, 
   3.795183339637835*^9}, 3.7951834738995476`*^9, {3.7951835109222383`*^9, 
   3.7951835236015825`*^9}, 3.795183582413649*^9, 3.7951837054867873`*^9, {
   3.795183739628326*^9, 3.7951837575869617`*^9}, {3.7951838061384926`*^9, 
   3.7951838128793845`*^9}, {3.795183941423379*^9, 3.795183945628024*^9}, 
   3.795184038536199*^9, {3.7951871852100105`*^9, 3.7951872243497543`*^9}, 
   3.79518743697855*^9, 3.795199655790443*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"585a12ef-f518-4e2c-a113-a386c8f97b17"]
}, {2}]],

Cell["\<\
The interface below allows one to set the range of parameter values to test, \
and thus look for a minimum value of the energy.\
\>", "Text",
 CellChangeTimes->{{3.795163812577766*^9, 
  3.795163840562214*^9}},ExpressionUUID->"eb5acedc-61c7-4fb2-abcc-\
05d41e964268"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"update", ";", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Alpha]list", ",", "\[Alpha]evol", ",", "\[Alpha]energy", ",", 
        "errenergy", ",", "minenergy", ",", "\[Alpha]textbox", ",", 
        "energyplot"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Alpha]list", "=", 
        RowBox[{"Range", "@@", 
         RowBox[{"Append", "[", 
          RowBox[{"\[Alpha]range", ",", "d\[Alpha]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]evol", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"metropolisTotal", "[", 
           RowBox[{
            RowBox[{"metropolisTherm", "[", 
             RowBox[{
              RowBox[{"RandomReal", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "#"}], ",", "#"}], "}"}], ",", "walkers"}], 
               "]"}], ",", "walkers", ",", 
              RowBox[{"Ceiling", "[", 
               RowBox[{"0.2", "*", "steps"}], "]"}], ",", "#"}], "]"}], ",", 
            "steps", ",", "#"}], "]"}], "&"}], "/@", "\[Alpha]list"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]energy", "=", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"u", ",", "v"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"u", ",", 
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Harmosc", "[", 
                    RowBox[{"#", ",", "u"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Harmosc", "[", 
                    RowBox[{"#", ",", "u"}], "]"}], ")"}], "^", "2"}]}], 
                    "}"}], "&"}], ",", "v", ",", 
                   RowBox[{"{", "2", "}"}]}], "]"}], ",", "2"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"walkers", "*", "steps"}], ")"}]}]}], "}"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\[Alpha]list", ",", "\[Alpha]evol"}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"errenergy", "=", 
        RowBox[{"\[Alpha]energy", "/.", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a_Real", ",", "b_Real"}], "}"}], "\[RuleDelayed]", 
          RowBox[{"{", 
           RowBox[{"a", ",", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"a", " ", "-", " ", 
                RowBox[{"b", "^", "2"}]}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"walkers", "*", "steps"}], ")"}]}], "]"}]}], 
           "}"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"minenergy", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"errenergy", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]textbox", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<\[Alpha] Range: \>\"", "<>", 
              RowBox[{"ToString", "[", "\[Alpha]range", "]"}], "<>", 
              "\"\<\\nMinimum Energy (eV): \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"minenergy", ",", "0.01"}], "]"}], "]"}], "<>", 
              "\"\<\\nCorresponding to \[Alpha]=\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"First", "@", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"Cases", "[", 
                  RowBox[{"errenergy", ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"a_Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"b_Real", ",", "c_Real"}], "}"}]}], "}"}], "/;", 
                    RowBox[{"b", "\[Equal]", "minenergy"}]}]}], "]"}]}]}], 
               "]"}]}], ",", 
             RowBox[{"TextAlignment", "\[Rule]", "Left"}], ",", "16", ",", 
             "Italic"}], "]"}], "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"264", ",", "Automatic"}], "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"energyplot", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"errenergy", "/.", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a_Real", ",", "b_Real"}], "}"}], "\[RuleDelayed]", " ", 
            RowBox[{"Around", "[", 
             RowBox[{"a", ",", 
              RowBox[{"b", "*", "10"}]}], "]"}]}]}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<Energy (eV)\>\""}], "}"}]}],
           ",", 
          RowBox[{"PlotMarkers", "->", "\"\<OpenMarkers\>\""}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", "\"\<Energy\>\"", "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"energyplot", ",", "\[Alpha]textbox"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Range and step size of the parameter\>\"", ",", "12"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]range", ",", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "0.6"}], "}"}], ",", "\"\<\[Alpha]\>\""}], "}"}], 
     ",", "0.1", ",", "3.", ",", "d\[Alpha]", ",", " ", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d\[Alpha]", ",", "0.1", ",", "\"\<\[Alpha] step\>\""}], "}"}], 
     ",", 
     RowBox[{"ControlType", "\[Rule]", "InputField"}]}], "}"}], ",", 
   "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Number of steps for each walker\>\"", ",", "12"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"steps", ",", "1000", ",", "\"\<Steps\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1000", ",", "10000", ",", "100000"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Number of walkers\>\"", ",", "12"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"walkers", ",", "100", ",", "\"\<Walkers\>\""}], "}"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"100", ",", "500", ",", "50"}], "]"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", "Slider"}], ",", " ", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "Delimiter", ",", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Update\>\"", ",", 
     RowBox[{"update", "=", 
      RowBox[{"1", "-", "update"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"update", ",", "0"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
    RowBox[{"{", "update", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7944919605137577`*^9, 3.79449211112821*^9}, {
   3.7944921579789534`*^9, 3.794492215567326*^9}, {3.7944922894449143`*^9, 
   3.7944922904276247`*^9}, 3.7944926231768103`*^9, {3.7944928497247825`*^9, 
   3.7944928881144495`*^9}, {3.7944929999126115`*^9, 3.794493062387371*^9}, {
   3.794493093952443*^9, 3.7944931822487483`*^9}, {3.79449327821134*^9, 
   3.7944932784099045`*^9}, {3.7944933950934567`*^9, 
   3.7944934051016235`*^9}, {3.79449343807419*^9, 3.7944934676325893`*^9}, {
   3.794493518904313*^9, 3.794493596858889*^9}, {3.794493657896993*^9, 
   3.794493675910243*^9}, {3.79449372201184*^9, 3.794493761513056*^9}, {
   3.7944937991419353`*^9, 3.7944938162490273`*^9}, {3.794493865144236*^9, 
   3.794493868820182*^9}, {3.794493900709356*^9, 3.7944940235816536`*^9}, {
   3.794494105540902*^9, 3.794494162258977*^9}, 3.794496333910532*^9, {
   3.794502941556384*^9, 3.7945029457271338`*^9}, {3.794503076945589*^9, 
   3.7945030903256817`*^9}, {3.794503365443937*^9, 3.7945033764251966`*^9}, {
   3.794503438168967*^9, 3.7945034405165515`*^9}, {3.794503513503839*^9, 
   3.7945037640712223`*^9}, {3.794503799968679*^9, 3.794503802028698*^9}, {
   3.7945038855181246`*^9, 3.7945039740295725`*^9}, {3.7945040605902414`*^9, 
   3.7945040824718885`*^9}, {3.7945042179663415`*^9, 
   3.7945042376809535`*^9}, {3.7945104506294107`*^9, 
   3.7945104753528767`*^9}, {3.7945105090806932`*^9, 3.794510542838624*^9}, {
   3.794510624419943*^9, 3.794510704737298*^9}, {3.7945107803352785`*^9, 
   3.7945107846655664`*^9}, {3.794511050799731*^9, 3.7945110569854393`*^9}, {
   3.7945110926832547`*^9, 3.7945111708790064`*^9}, {3.794511356915079*^9, 
   3.794511379740281*^9}, {3.7945114122031326`*^9, 3.794511451107525*^9}, {
   3.7945115144573956`*^9, 3.794511653832381*^9}, {3.79451170333482*^9, 
   3.794511773448781*^9}, {3.7945118134344816`*^9, 3.7945118178864393`*^9}, {
   3.79451185281793*^9, 3.794511941796953*^9}, {3.7945120286881437`*^9, 
   3.794512056114137*^9}, {3.7945120963941803`*^9, 3.7945121497766376`*^9}, {
   3.794512195696349*^9, 3.7945122150668926`*^9}, {3.794512251356112*^9, 
   3.7945123710036373`*^9}, {3.794512409944169*^9, 3.794512447755306*^9}, {
   3.7945126381259823`*^9, 3.7945126646215315`*^9}, {3.7945127824868155`*^9, 
   3.794512836730792*^9}, {3.7945128918666887`*^9, 3.794512912664513*^9}, {
   3.79451296684424*^9, 3.7945129912771907`*^9}, 3.7945130526971855`*^9, {
   3.7945131404556503`*^9, 3.7945133001843185`*^9}, 3.7945133320851917`*^9, {
   3.7945134522403507`*^9, 3.79451345571354*^9}, {3.7945135375319977`*^9, 
   3.794513595208226*^9}, {3.7945137599624586`*^9, 3.79451386869201*^9}, {
   3.794514232705084*^9, 3.7945142423388243`*^9}, {3.7945142740152373`*^9, 
   3.7945143624772387`*^9}, {3.7945143956472883`*^9, 
   3.7945144040496845`*^9}, {3.7945144744315743`*^9, 3.794514481937004*^9}, {
   3.79451452061444*^9, 3.794514544420895*^9}, {3.7945145949178395`*^9, 
   3.794514628088222*^9}, {3.7945147862350707`*^9, 3.794514842758274*^9}, {
   3.7945150555947037`*^9, 3.794515065808036*^9}, {3.7945153329885187`*^9, 
   3.794515337898527*^9}, {3.794515371153273*^9, 3.7945154519240294`*^9}, {
   3.7945413529537835`*^9, 3.794541357002714*^9}, {3.794543825159028*^9, 
   3.7945438287014933`*^9}, {3.7945446222525196`*^9, 3.794544640111827*^9}, {
   3.7945446902914915`*^9, 3.7945446910173283`*^9}, {3.7945447889653044`*^9, 
   3.794544791443009*^9}, {3.7945448459443426`*^9, 3.7945448551294003`*^9}, 
   3.7945449675722523`*^9, {3.7945456653165474`*^9, 3.794545682631757*^9}, {
   3.7945464646781096`*^9, 3.7945464665789194`*^9}, {3.794629182248567*^9, 
   3.7946292172093525`*^9}, {3.794629292860696*^9, 3.7946293061842422`*^9}, {
   3.7946293717634735`*^9, 3.794629409920095*^9}, {3.79462965629272*^9, 
   3.794629753508513*^9}, {3.794629814600472*^9, 3.7946298664672527`*^9}, {
   3.7951634668975534`*^9, 3.795163642773432*^9}, 3.7951873584202385`*^9, {
   3.795187462202004*^9, 3.795187462951003*^9}, {3.7951874964089494`*^9, 
   3.795187501375141*^9}, {3.7951996717478304`*^9, 3.795199709876567*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"dd7354f3-b4da-41b8-8c0c-89a33158df32"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`d\[Alpha]$$ = 0.1, $CellContext`steps$$ = 
    1000, $CellContext`update$$ = 0, $CellContext`walkers$$ = 
    100, $CellContext`\[Alpha]range$$ = {0.3, 0.6}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Style["Range and step size of the parameter", 12]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Alpha]range$$], {0.3, 0.6}, "\[Alpha]"}, 0.1, 3., 
      Dynamic[$CellContext`d\[Alpha]$$]}, {{
       Hold[$CellContext`d\[Alpha]$$], 0.1, "\[Alpha] step"}}, {
      Hold[
       Style["Number of steps for each walker", 12]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`steps$$], 1000, "Steps"}, {1000, 10000, 100000}}, {
      Hold[
       Style["Number of walkers", 12]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`walkers$$], 100, "Walkers"}, {100, 150, 200, 250, 
      300, 350, 400, 450, 500}}, {
      Hold[
       Button[
       "Update", $CellContext`update$$ = 1 - $CellContext`update$$, ImageSize -> 
        Medium]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`update$$], 0}}}, Typeset`size$$ = {
    771., {136., 143.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]range$7836$$ = 
    0, $CellContext`steps$7837$$ = 0, $CellContext`walkers$7838$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     3, StandardForm, 
      "Variables" :> {$CellContext`d\[Alpha]$$ = 0.1, $CellContext`steps$$ = 
        1000, $CellContext`update$$ = 0, $CellContext`walkers$$ = 
        100, $CellContext`\[Alpha]range$$ = {0.3, 0.6}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]range$$, $CellContext`\[Alpha]range$7836$$, 
         0], 
        Hold[$CellContext`steps$$, $CellContext`steps$7837$$, 0], 
        Hold[$CellContext`walkers$$, $CellContext`walkers$7838$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`update$$; 
       Module[{$CellContext`\[Alpha]list$, $CellContext`\[Alpha]evol$, \
$CellContext`\[Alpha]energy$, $CellContext`errenergy$, \
$CellContext`minenergy$, $CellContext`\[Alpha]textbox$, \
$CellContext`energyplot$}, $CellContext`\[Alpha]list$ = Apply[Range, 
            
            Append[$CellContext`\[Alpha]range$$, $CellContext`d\[Alpha]$$]]; \
$CellContext`\[Alpha]evol$ = Map[$CellContext`metropolisTotal[
             $CellContext`metropolisTherm[
              
              RandomReal[{-#, #}, $CellContext`walkers$$], \
$CellContext`walkers$$, 
              Ceiling[
              0.2 $CellContext`steps$$], #], $CellContext`steps$$, #]& , \
$CellContext`\[Alpha]list$]; $CellContext`\[Alpha]energy$ = MapThread[
            
            Function[{$CellContext`u$, $CellContext`v$}, {$CellContext`u$, 
              Total[
                Map[{
                  $CellContext`Harmosc[#, $CellContext`u$], \
$CellContext`Harmosc[#, $CellContext`u$]^2}& , $CellContext`v$, {2}], 
                2]/($CellContext`walkers$$ $CellContext`steps$$)}], \
{$CellContext`\[Alpha]list$, $CellContext`\[Alpha]evol$}]; \
$CellContext`errenergy$ = ReplaceAll[$CellContext`\[Alpha]energy$, {
              Pattern[$CellContext`a$, 
               Blank[Real]], 
              Pattern[$CellContext`b$, 
               Blank[Real]]} :> {$CellContext`a$, 
              Sqrt[
              Abs[$CellContext`a$ - \
$CellContext`b$^2]/($CellContext`walkers$$ $CellContext`steps$$)]}]; \
$CellContext`minenergy$ = Min[
            
            Part[$CellContext`errenergy$, All, 2, 
             1]]; $CellContext`\[Alpha]textbox$ = Graphics[
            Text[
             Style[
              StringJoin["\[Alpha] Range: ", 
               ToString[$CellContext`\[Alpha]range$$], 
               "\nMinimum Energy (eV): ", 
               ToString[
                Round[$CellContext`minenergy$, 0.01]], 
               "\nCorresponding to \[Alpha]=", 
               ToString[
                First[
                 Flatten[
                  Cases[$CellContext`errenergy$, 
                   Condition[{
                    Pattern[$CellContext`a$, 
                    Blank[Real]], {
                    Pattern[$CellContext`b$, 
                    Blank[Real]], 
                    Pattern[$CellContext`c$, 
                    Blank[
                    Real]]}}, $CellContext`b$ == \
$CellContext`minenergy$]]]]]], TextAlignment -> Left, 16, Italic]], 
            ImageSize -> {264, Automatic}]; $CellContext`energyplot$ = 
          ListPlot[
            ReplaceAll[$CellContext`errenergy$, {
               Pattern[$CellContext`a, 
                Blank[Real]], 
               Pattern[$CellContext`b, 
                Blank[Real]]} :> Around[$CellContext`a, $CellContext`b 10]], 
            Joined -> True, ImageSize -> 500, 
            AxesLabel -> {"\[Alpha]", "Energy (eV)"}, PlotMarkers -> 
            "OpenMarkers", PlotLegends -> {"Energy"}]; 
         Row[{$CellContext`energyplot$, $CellContext`\[Alpha]textbox$}]]), 
      "Specifications" :> {
        Style[
        "Range and step size of the parameter", 
         12], {{$CellContext`\[Alpha]range$$, {0.3, 0.6}, "\[Alpha]"}, 0.1, 
         3., 
         Dynamic[$CellContext`d\[Alpha]$$], Appearance -> "Labeled", 
         ControlType -> 
         IntervalSlider}, {{$CellContext`d\[Alpha]$$, 0.1, "\[Alpha] step"}, 
         ControlType -> InputField}, Delimiter, 
        Style[
        "Number of steps for each walker", 
         12], {{$CellContext`steps$$, 1000, "Steps"}, {1000, 10000, 100000}}, 
        Delimiter, 
        Style[
        "Number of walkers", 12], {{$CellContext`walkers$$, 100, "Walkers"}, {
         100, 150, 200, 250, 300, 350, 400, 450, 500}, ControlType -> Slider, 
         Appearance -> "Labeled"}, Delimiter, 
        Button[
        "Update", $CellContext`update$$ = 1 - $CellContext`update$$, 
         ImageSize -> Medium], {{$CellContext`update$$, 0}, ControlType -> 
         None}}, "Options" :> {TrackedSymbols :> {$CellContext`update$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1095., {165., 172.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7945445991721673`*^9, 3.7945446406417704`*^9}, 
   3.7945447450300694`*^9, 3.7945449709160175`*^9, 3.794545022127217*^9, 
   3.7945451674046526`*^9, 3.79454558364526*^9, {3.7945456733561587`*^9, 
   3.7945456838446527`*^9}, 3.794545829643131*^9, 3.794545923321869*^9, 
   3.794546360152223*^9, {3.7945464600808363`*^9, 3.794546467618314*^9}, 
   3.7946292214090443`*^9, {3.794629299790579*^9, 3.7946293069995327`*^9}, 
   3.7946294105967054`*^9, 3.794629756902892*^9, {3.7946298370513134`*^9, 
   3.79462986907085*^9}, 3.795163443041477*^9, {3.7951634966704855`*^9, 
   3.7951635468088803`*^9}, {3.795163609703634*^9, 3.7951636439417586`*^9}, 
   3.7951873601841326`*^9, {3.7951874970962768`*^9, 3.7951875017536955`*^9}, {
   3.7951997036074257`*^9, 3.7951997108071785`*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"42102e85-9600-4249-a638-186040c3db1b"]
}, {2}]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
InitializationCellEvaluation->True,
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.9 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 192, 3, 87, "Title",ExpressionUUID->"df583bff-2228-4d65-9101-f3ec297283d4"],
Cell[CellGroupData[{
Cell[800, 29, 161, 3, 60, "Section",ExpressionUUID->"d45367f4-02d0-4493-adb1-cf4740840e40"],
Cell[964, 34, 870, 16, 73, "Text",ExpressionUUID->"94297a31-2c08-43d2-82b7-6046d0911ba0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1871, 55, 154, 3, 60, "Section",ExpressionUUID->"9d5a477d-380e-42bc-9bd6-84efd162a331"],
Cell[2028, 60, 990, 22, 38, "Text",ExpressionUUID->"f9949a9f-0bde-4679-9908-e0a3f9ff8647",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3043, 86, 164, 3, 48, "Subsection",ExpressionUUID->"a26ac1c8-e0de-4de7-9724-29dbb6704155"],
Cell[3210, 91, 541, 11, 40, "Input",ExpressionUUID->"e6b61e46-e2d7-4c14-8dcf-725733412a2d",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[3788, 107, 210, 4, 34, "Subsection",ExpressionUUID->"6c0a8e5e-8701-453c-91b9-33ff477fe7d0"],
Cell[4001, 113, 229, 5, 31, "Text",ExpressionUUID->"5b68438c-0f9b-4908-b039-7981b6e6769d"],
Cell[CellGroupData[{
Cell[4255, 122, 31435, 576, 683, "Input",ExpressionUUID->"60eb4dc3-f71f-481f-8b58-0947afc0514b"],
Cell[35693, 700, 7962, 151, 595, "Output",ExpressionUUID->"585a12ef-f518-4e2c-a113-a386c8f97b17"]
}, {2}]],
Cell[43667, 854, 277, 6, 31, "Text",ExpressionUUID->"eb5acedc-61c7-4fb2-abcc-05d41e964268"],
Cell[CellGroupData[{
Cell[43969, 864, 12145, 249, 495, "Input",ExpressionUUID->"dd7354f3-b4da-41b8-8c0c-89a33158df32"],
Cell[56117, 1115, 7809, 157, 355, "Output",ExpressionUUID->"42102e85-9600-4249-a638-186040c3db1b"]
}, {2}]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

