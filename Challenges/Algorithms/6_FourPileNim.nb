(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     42369,        995]
NotebookOptionsPosition[     22550,        623]
NotebookOutlinePosition[     37945,        921]
CellTagsIndexPosition[     37875,        916]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Four-Pile Nim", "Title",ExpressionUUID->"2ae6c90c-1ca3-49b1-8dbe-d7aab3fb3511"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"THE CHALLENGE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellMargins->{{66, 0}, {-2, 
  37}},ExpressionUUID->"ce29152f-1f39-4d97-82b1-b424bb0e36db"],

Cell["", "WCIntroDividerLine",ExpressionUUID->"3d161d49-893a-4dcd-8d3b-221d3e665d41"],

Cell["\<\
Nim is a two-person game in which players take turns removing any number of \
chips from one of several piles of chips, with the goal of taking the last \
one. Write a function that looks at the state of a game of Nim with four \
piles and returns whether or not the player making the next move has a \
winning strategy.\
\>", "Description",ExpressionUUID->"7e221559-79ed-4634-a02f-1b3e4ec3ba95"],

Cell[CellGroupData[{

Cell["More Details", "Section",ExpressionUUID->"d3782c7a-996d-4e40-8a1b-81bf3a3613d4"],

Cell["Nim is a very old game that is very easy to explain.", "Text",ExpressionUUID->"2d2b6791-fcb9-4f1e-aaf2-1588e05c2045"],

Cell[TextData[{
 "The setup consists of some piles of chips. As a specific example, consider \
four piles with 1, 2, 5, 8 chips. The game state is ",
 StyleBox["{1,2,5,8}", "MR"],
 "."
}], "Text",ExpressionUUID->"c77a14d1-d376-4e99-a967-00875d4ba496"],

Cell["\<\
Player 1 chooses a pile and removes some chips from that pile. In the \
example, Player 1 can choose pile 3 and remove from one to five chips from \
that pile.\
\>", "Text",ExpressionUUID->"69b33224-1475-470c-8c3b-6479fea1c25f"],

Cell["\<\
Players alternate taking away chips until one player wins by taking the last \
chip.\
\>", "Text",ExpressionUUID->"e2a4606e-84ab-43cb-abaf-c7328394f7de"],

Cell[TextData[{
 "Say Player 1 removes five chips from pile 3. The game state is then ",
 StyleBox["{1,2,0,8}", "MR"],
 ". If Player 2 takes away two chips from the last pile, the game state is ",
 StyleBox["{1,2,0,6}", "MR"],
 ". Then it is Player 1's turn, and so on."
}], "Text",ExpressionUUID->"db337fa1-7c62-4b55-881a-f61a78ce53fe"],

Cell[TextData[{
 "If the game state is ",
 StyleBox["{0,1,0,0}", "MR"],
 " for Player 1, Player 1 wins."
}], "Text",ExpressionUUID->"0b8468e2-f96c-4c86-bb85-a168f2074d4d"],

Cell["\<\
Because the rules of Nim are so simple and do not rely on chance, it is \
possible to decide if the next player to choose has a winning strategy by \
looking at the current game state.\
\>", "Text",ExpressionUUID->"7ddb05ef-c165-4ab9-bbda-87ec0b93b2fd"],

Cell[TextData[{
 "For example, suppose it is Player 1's turn and the game state is ",
 StyleBox["{2,1}", "MR"],
 ": two chips in the first pile and one chip in the second. Player 1 can win \
by removing one chip from pile 1, leaving the losing game state ",
 StyleBox["{1,1}", "MR"],
 " for Player 2, who must leave Player 1 the winning game state ",
 StyleBox["{1,0}", "MR"],
 " or ",
 StyleBox["{0,1}", "MR"],
 "."
}], "Text",ExpressionUUID->"53dadcdb-c8b3-42d7-814b-403e53251864"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[{RectangleBox[{0, 0}, {3, 1}], RectangleBox[{0, 1.1}, {3, 2.1}],
     RectangleBox[{3.2, 0}, {6.2, 1}], ArrowBox[{{6.4, 1.05}, {8.4, 1.05}}], 
    RectangleBox[{8.6, 0}, {11.6, 1}], RectangleBox[{11.8, 0}, {14.8, 1}]}],
  Alignment->Center,
  ImageSize->Full]], "Output",
 FontSize->14,ExpressionUUID->"0a033b3c-dee3-4a71-871e-84b65697cc45"],

Cell[TextData[{
 "For this Challenge, you are asked to write a function that takes the \
starting configuration of a game of Nim with four piles and returns ",
 StyleBox["True", "MR"],
 " or ",
 StyleBox["False", "MR"],
 " depending on whether or not the first player to move can win, given that \
configuration."
}], "Text",ExpressionUUID->"a2a2018a-cd6a-4ec8-83ed-815eaac931c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What Your Function Should Do", "Section",ExpressionUUID->"1a382516-fce3-4d25-93b8-5fd5e44bde7d"],

Cell[TextData[{
 "Write a function called ",
 StyleBox["NimWin", "InlineCode"],
 " that takes as input four non-negative integers (not all 0) that represent \
the number of chips in the starting configuration of a game of Nim with four \
piles. The output should be ",
 StyleBox["True", "InlineCode"],
 " if the first person to play from this configuration has a winning strategy \
and ",
 StyleBox["False", "InlineCode"],
 " otherwise."
}], "Text",ExpressionUUID->"5310a9ba-63b6-4867-97e9-1aba452f32f2"],

Cell["\<\
This corresponds to the game state in the graphic example above:\
\>", "Text",ExpressionUUID->"8c7b2c1b-334d-4e0a-a201-33faf5d4f94f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["NimWin",
    StripOnInput->True,
    FontColor->GrayLevel[0]], "[", 
   RowBox[{"2", ",", "1", ",", "0", ",", "0"}], "]"}], " "}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[1]:=",ExpressionUUID->"276b544a-6b99-48f7-8ee5-184e78ccfb02"],

Cell[BoxData["True"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[1]=",ExpressionUUID->"2114cf08-26e3-41a6-8444-9fbb403ab0b6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "Subsection",ExpressionUUID->"2c954fef-d68b-4d71-9304-e6438f02a556"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["NimWin",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[2]:=",ExpressionUUID->"98568864-9115-464b-91ce-18915efd7ff9"],

Cell[BoxData["True"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[2]=",ExpressionUUID->"70075d61-ccc9-4242-a866-03b931adbeba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["NimWin",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"1", ",", " ", "1", ",", " ", "1", ",", " ", "1"}], "]"}]], "Input",\

 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[3]:=",ExpressionUUID->"401cae41-915e-4fb9-8297-e4e2598d42b3"],

Cell[BoxData["False"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[3]=",ExpressionUUID->"4219521c-e1f4-4ab7-bbfd-4ce7e2888c75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["NimWin",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"1", ",", "3", ",", " ", "5", ",", " ", "7"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[4]:=",ExpressionUUID->"4d644019-19b1-4fae-9144-012382dd5623"],

Cell[BoxData["False"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[4]=",ExpressionUUID->"3469d559-ec7a-4a5a-9d5f-2697eca51040"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["NimWin",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"1", ",", " ", "2", ",", " ", "4", ",", " ", "6"}], "]"}]], "Input",\

 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[5]:=",ExpressionUUID->"0f7a3738-7663-41d2-959c-ccfe0719194a"],

Cell[BoxData["True"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[5]=",ExpressionUUID->"ff298ae8-09e9-410f-8a08-93ac6967be10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["NimWin",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"3", ",", " ", "8", ",", " ", "15", ",", " ", "2"}], "]"}]], "Input",\

 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[6]:=",ExpressionUUID->"6d88b7b6-1a71-4bda-9413-65492c422a37"],

Cell[BoxData["True"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[6]=",ExpressionUUID->"b3a9e4bf-ce55-4779-a9d5-46f16701f885"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["NimWin",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"2", ",", " ", "2", ",", " ", "5", ",", " ", "3"}], "]"}]], "Input",\

 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[7]:=",ExpressionUUID->"d5c2b11a-41ca-433c-a093-702789243fe6"],

Cell[BoxData["True"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[7]=",ExpressionUUID->"d191ca96-41de-47ba-a17b-15273f84ffa0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["NimWin",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"2", ",", " ", "2", ",", " ", "1", ",", " ", "1"}], "]"}]], "Input",\

 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[8]:=",ExpressionUUID->"f57ecbb9-cb9f-4548-a443-65421bfd4bf0"],

Cell[BoxData["False"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[8]=",ExpressionUUID->"5740c7b9-534a-4910-83d4-66a0cc64ea58"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"SCRATCH AREA\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->GrayLevel[0.65],
  FrameMargins->{{13, 13}, {2, 5}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellGroupingRules->{
  "SectionGrouping", 
   0},ExpressionUUID->"667ef227-8444-4e87-83c6-e0e1c194ce5b"],

Cell[BoxData[""], "WCIntroDividerLine",
 CellFrameColor->GrayLevel[
  0.65],ExpressionUUID->"7bb12ef3-3cb2-4f84-9642-1fd70e57f6ce"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"ENTER YOUR CODE HERE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",ExpressionUUID->"fcf8748e-9d09-4c8e-\
84dc-b9d930e73178"],

Cell[BoxData[""], "WCIntroDividerLine",ExpressionUUID->"b9fcc606-42e8-42ef-9b5f-9b313c2d8f12"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NimWin", "[", 
     RowBox[{
      RowBox[{"w_Integer", "?", "NonNegative"}], ",", 
      RowBox[{"x_Integer", "?", "NonNegative"}], ",", 
      RowBox[{"y_Integer", "?", "NonNegative"}], ",", 
      RowBox[{"z_Integer", "?", "NonNegative"}]}], "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", " ", "+", " ", "y", " ", "+", "z", " ", "+", " ", "w"}], 
      " ", ">", " ", "0"}], ")"}]}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"BitXor", "[", 
       RowBox[{"w", ",", "x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0"}], 
     ",", "False", ",", "True"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.796284087183454*^9, 3.7962840941568213`*^9}, {
  3.7962841408637133`*^9, 3.796284186537137*^9}, {3.7962842319425297`*^9, 
  3.7962842680491233`*^9}, {3.796284539387227*^9, 3.796284582288211*^9}, {
  3.796284612750224*^9, 3.7962846172761993`*^9}, {3.796284659541366*^9, 
  3.796284771160247*^9}},
 CellTags->"NoLabel",
 CellLabel->"In[8]:=",ExpressionUUID->"6cc5691d-295f-4b3f-835d-9c2ca1c99f43"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   DynamicModuleBox[{
    WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}, 
    ButtonBox[
     DynamicBox[
      ToBoxes[
       If[
        TrueQ[WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$], 
        Framed[
         Panel[
          ProgressIndicator[Appearance -> "Percolate", ImageSize -> {60, 20}],
           Background -> White, ImageSize -> {100, 20}, FrameMargins -> 0, 
          Alignment -> Center, Appearance -> "Frameless"], Background -> 
         GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
         RoundingRadius -> 3, Alignment -> Center], 
        Mouseover[
         Framed[
          Panel[
           Style["Submit", "ButtonLabel", ShowStringCharacters -> False], 
           Background -> RGBColor[0.9961, 0.3098, 0.21569], 
           ImageSize -> {100, 20}, FrameMargins -> 0, Alignment -> Center, 
           Appearance -> "Frameless"], Background -> 
          RGBColor[0.9961, 0.3098, 0.21569], FrameStyle -> 
          RGBColor[0.9961, 0.3098, 0.21569], RoundingRadius -> 3, Alignment -> 
          Center], 
         Framed[
          Panel[
           Style[
           "Submit", "ButtonLabelActive", ShowStringCharacters -> False], 
           Background -> GrayLevel[1], ImageSize -> {100, 20}, FrameMargins -> 
           0, Alignment -> Center, Appearance -> "Frameless"], Background -> 
          GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
          RoundingRadius -> 3, Alignment -> Center]]], StandardForm], 
      ImageSizeCache -> {115., {16., 20.}}], Appearance -> None, 
     ButtonFunction :> ((
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = True; (Off[
         MessageName[$CharacterEncoding, "utf8"]]; ((If[
          Not[
           TrueQ[
            WolframChallenges`$NotebookInitializedQ[
             Hash[{$SessionID, 
               Last[
                EvaluationNotebook[]]}]]]], 
          CloudGet[
           FileNameJoin[{
             CloudObject[
             "https://www.wolframcloud.com/objects/wolframchallenges/public/\
symbols"], "InitializeNotebook"}]][]]; If[
          Not[
           ValueQ[
           WolframChallenges`Notebooks`Dialogs`RunWithSubmissionPolicy]], 
          WolframChallenges`Notebooks`Dialogs`RunWithSubmissionPolicy = 
          CloudGet[
            FileNameJoin[{
              CloudObject[
              "https://www.wolframcloud.com/objects/wolframchallenges/public/\
symbols"], "RunWithSubmissionPolicy"}]]]; 
        WolframChallenges`Notebooks`Dialogs`RunWithSubmissionPolicy[If[
            Or[$VersionNumber >= 11.1, 
             ChoiceDialog[
              StringJoin["Wolfram Challenges is designed for version ", 
               ToString[11.1], 
               " or later of the Wolfram System, and may not function \
properly with the older ", 
               "kernel you are using. Contact Wolfram Research \
(www.wolfram.com) for upgrade information."]]], 
            If[
             Not[
              StringQ[
               If[
                Not[$CloudConnected], 
                CloudConnect[], $WolframID]]], 
             MessageDialog[
             "Users must authenticate with the cloud in order to submit \
solutions."], WolframChallenges`$SubmissionTesting = False; Quiet[
               Quiet[If[
                  TrueQ[WolframChallenges`Common`$ActiveClearing], 
                  Quiet[
                   Unset[
                    Once["public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]]; Catch[
                  
                  Module[{CodeEquivalence`Utilities`Private`result$}, 
                   Check[CodeEquivalence`Utilities`Private`result$ = 
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]; 
                    Throw[CodeEquivalence`Utilities`Private`result$, 
                    CodeEquivalence`Utilities`OnceUnlessFailed]]; If[
                    FailureQ[CodeEquivalence`Utilities`Private`result$], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]; (Message[
                    "Evaluating `1` resulted in the failure `2`.", 
                    Short[
                    HoldForm["public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]]]], 
                    Short[
                    HoldForm[#]]]& )[
                    CodeEquivalence`Utilities`Private`result$]]; 
                   CodeEquivalence`Utilities`Private`result$], 
                  CodeEquivalence`Utilities`OnceUnlessFailed], 
                MessageName[CloudObject, "invuri"]], 
               MessageName[$CharacterEncoding, "utf8"]][
               Quiet[
                Quiet[If[
                   TrueQ[WolframChallenges`Common`$ActiveClearing], 
                   Quiet[
                    Unset[
                    Once["public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]]; Catch[
                   
                   Module[{CodeEquivalence`Utilities`Private`result$}, 
                    Check[CodeEquivalence`Utilities`Private`result$ = 
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]; 
                    Throw[CodeEquivalence`Utilities`Private`result$, 
                    CodeEquivalence`Utilities`OnceUnlessFailed]]; If[
                    FailureQ[CodeEquivalence`Utilities`Private`result$], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]; (Message[
                    "Evaluating `1` resulted in the failure `2`.", 
                    Short[
                    HoldForm["public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]]]], 
                    Short[
                    HoldForm[#]]]& )[
                    CodeEquivalence`Utilities`Private`result$]]; 
                    CodeEquivalence`Utilities`Private`result$], 
                   CodeEquivalence`Utilities`OnceUnlessFailed], 
                 MessageName[CloudObject, "invuri"]], 
                MessageName[$CharacterEncoding, "utf8"]][
                CloudObject[
                "https://www.wolframcloud.com/objects/wolframchallenges/\
public/api/check"], {"NimWin"}, "public/pub/p-71575fb9456cb036"]]]]; 
          Null])& )[]); 
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False; 
      Null)& )[], Evaluator -> Automatic, Method -> "Queued"], 
    DynamicModuleValues :> {}, 
    Initialization :> {
     WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}], 
   TemplateBox[{10}, "Spacer1"], 
   DynamicBox[
    ToBoxes[
     Refresh[Off[
        MessageName[$CharacterEncoding, "utf8"]]; If[
        Not[
         TrueQ[$CloudConnected]], 
        Column[{
          Row[{
            Text[
             Style[
             "Note: ", "SigninText", FontWeight -> "DemiBold", Background -> 
              None]], 
            Text[
             Button[
              
              PaneSelector[{
               False -> "Sign into the Wolfram Cloud", True -> 
                "Sign into the Wolfram Cloud"}, 
               Dynamic[
                CurrentValue["MouseOver"], 
                ImageSizeCache -> {48., {1., 12.}}], 
               BaseStyle -> {"SigninText", 
                 RGBColor["#36b1bf"]}, FrameMargins -> 0, ImageSize -> 
               Automatic], 
              CloudConnect[], Appearance -> None, Evaluator -> Automatic, 
              Method -> "Queued"]], 
            Text[
             Style[
             " to save your work on ", "SigninText", Background -> None]]}], 
          Text[
           Style[
           "Challenges and keep track of progress.", "SigninText", Background -> 
            None]]}, Alignment -> Left, Spacings -> 0], 
        Invisible[""]], UpdateInterval -> 1], StandardForm]]},
  "RowDefault"]], "SubmitRow",ExpressionUUID->"b772478e-71b5-48ba-ad38-\
4db347ae9068"]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        ButtonBox[
         TagBox[
          GridBox[{{
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJzVmguUlVUVx4eXTDAoMSKGyEMFEc0oKRCmDBIMTSpEKkFGRh6ZNBCgaJGD
+QDKB1SKBoQouVKyJDGNkcBkWUG+SgXJ1JKsMAvIMJ+7/evsb90z557vfneu
F1zutf4z3+Ocs/c+j/36bq+66aOntKyoqJhVqX9GT5wzdObMiRef0VFvzqyf
dd7U+smTRtbPnjx18sxBda304WBFjaJ1RflJRFopOpZhnPcyVjlk2lek8p2h
+Ktiod13U6xQ/EIxFx0ifToqvmptbqKPPZ+v+Jti7P7WI41Ulh6KIXbdRfFf
cVRruv5ZcsS7oZExhnr9oOetb63dv6o4zNqeCM/9rafxPkXxsmKV3Y/2ZJ6J
jIovKtYo7lAMLDDWR6zNT60P+n7FG2+MtVup+I9ixP7S05PxKZPldruvUbzm
ybinlLWwedrjjfO6t4dus2fbyq1PRI4DFX29+7eM96N21sazhuLO66q3swba
d7jiFhtrkGKc8XjEeMK7pbU9RnFQOXT0+LO/nlHc4z3zzya0U8zW7APefw94
7fDer1U8W07eOtZ644NdaWPPBit+otiqWK3oVS5+Ef49jceTxnOwPW+peMVk
21gmXp2Cue1jz9s0c5wDFMcpRtnen6Q4U/FRxSHNHCuZ8+6BbJ2bM07K2IcH
Yz6t2Kt4U7E4o++hiumKDbYOu8SdwUbDJsVz4s7jHxRLFCcpWhQYc6Hx3mt9
fOpZoo7DFP3tuoXiT5JPbyhqUvofJS52QKZ7FecqjijAr71ihOLb4s7qE4qz
xWxS0Haw8Q7p+WSe9P/xipFF6nq4rcN2RaU9O9fmNKHdyBPp21oxT5xfvlHs
TJv+08TZ7V8r/mh4XHG34grFyYo24vZ9nc3xrxTHRfiMNxkTQrZae9fWZP+3
onsR+i7zxpnhPT9S8Vlx569TpF9Xk+9hxQfE2ZIxige98fDZN0fWJiHWlv1K
rPYexZU2d+dE+HUyWYhzjvSef9kbb3kR+m7z2nNWK8XFdthF9ma/SB984HM2
V8zv8aa7T0mcOKCAvgmxdpx7zhK++F+KSyJ8+5pMd5qMyLrdG2d7EfpuDXi/
5F0Ty3YK2nczXa60+4mS8xEJESMRi4y0uXkmeL8mRe97FAeJs+v494sia/xq
iqxQZhymba5P4Q3dGrRlLR9SLLH7i1P6sS8/JG4eLlJ8y3v3PXFn9q1IP+gx
RWfFh8Xt7VMDGVYWkPf6IvTtIe6sh8Qadg3aXiNu3yLvlBSeLyg6KLbYPT5o
oF0vEmejmLd/FJAbG8dexWa/KJ6f1ev3mWwhoUPPFB05Jy29+0+Jyz0hbPEK
xg36cEaZb87QB6XpvvJphuJ07x5bij063/Tk7PUTZ68L0Q3GlxxqWSALfv77
4s65mOyjvPfYzhbe/ScUmxW9gzmosuv2kTn6seJqcfWMh1JkJM+pEudzfKoV
53Mb7f79kssF0oj9Tq6MnyCuPSqQp739rwp0O9p0O9l7douNyXkf4Ok7S5yd
WBOMjT99xeb1rAIy4oOxZ2F8wFyd5t0j0wMZ+kIPGn982pJAJvYJZ2K25OKO
ExT/tL4rvbaPemOiXx9p6ofXBWNfqlht1w+nyMa+xUbNi7zjHHTz7rsXqS9E
bYBcG5/V1pPpXq/NCnFrstN7tsVr+8tgzL3B/c2Bvuj4OcWxBeSiXoWdejHl
Pf2pW+GrDpHi9V0gbu9hB4d7Mt2UocMmr21DBo8JXlvyftYOHzErpT3zh81u
THkPUZc5VfExRTspXt9tJgex6TxPrvEZ/S7z2lL7DPP3hNjrbby21Mz+Yte3
RtqzXsQHFxQhO/WfswIbUgwdrJijuM2TC7+2OaU9cWKT2qi4M/tk0O4+RZeg
HfswsRu/jYy92OTZXaTs2F3iFHKNJUX2wX9T+90cyEYs9vOgLfFiH69NB+8a
H/ElcfaI+uMECXJxcXHF3XYd5p/YB+rJlxUh88vBPetLTHFO5F1InxSXP24N
ZOtsMo8wHfDxVb6u4vYAc9I/6Jf41HERfdfa9VPSlPAF5DWJjWJuN0bkxX8e
aJgqufoUdrCPIW1vQuQQp0T0TXwj+XMX73l/cfYbnZK55Cxhf4gf1ntjXxrZ
z5vs+jdeO74rYHeoJbJHLxHnn2Ox6WvW9+vi7NVS7x3tyTk4j5eLswchkWN9
njEC2Xzfh/3jjMyQXJ14b0Sex4P7BcGY1Ed32PUqr129PWMedyjGils/fM13
IjJnEfX3rqbbY8E78iLyjh8Gsl2RoQs+YV0G3/HBmOjwhumRfAPg3LKPD5Om
sRR2iDPzuyzlUoi1qBfn2xrExehPmxzUK+cFso3LGA9d0+pBED6qXUVA4uwy
Z6WvtZtrzy/0+hL/s5++21wlA8LX/7+mLq7OTI2L+J/zMyyQi/MUq7VBnLEa
a1cr+fEIOQbxJ/WRg4NxGyRns4gpqu3atzH4X+Ig/MZgGwvf/WlxdvMbiuXi
6uWPmPx+jSwhfCf2c7Xd44vIG4iLD/BkqjZZiWFfCMbAPk4KdCCGvUHc2l0n
zod+wdqvDdr2EvtuJ1bvEBcP+zk7372oX00x3dGPWJBzRx5L7bkqGJf9kJzZ
060vueJsG/N+a/cDZAz6JjWScSb7daYLeUDviiJIXJ6d0IjgHfN9o3d/fmRt
smiB9eX7AXWAu8TlVA2K88TFiNRG3jSwT8ilmuSD4urHCTWJQVL0amvzTZ5P
DoBPIvbwfcGKoA/tyAmPtfssuxcj/ERf6w//tJoOtMja/Uws9/dk8XM5bFGV
6dDPdGLsSq89+8g/v9QJwjhhY2SeqJ2yZ7Cfid9tLt3njZcWl603HnyDwa5U
B3KsD9rfL7laB8S6tA76/ChDriY1FOuDDOz55XZPvFKKzmOtP/YtrFUSc2Gb
8fusyfCIHEulMN0Z6UPMlVaDgk4SZ2vDecJOYUOvtXtsUSymKkTEJ0ntCN2e
sOfojr+nNkmMekHAm31JXDOkwNicmQGhvtYfffZE+mAPa+yavdMh6HeEOH+b
xPz45Q3N1HmhNx61iTq7HmkyXRjwbCe5fcw3xlWRMZn3MTFdvXGoHfKtBxtw
uzj/zth+PntHSj/y/N9LrgZGjYqcspg9zjoc7Y2HzbnKdB0X4bfa6zvHZFxs
Mi8zHQ4tpGvGPMwP5MvbI+Js4lybV+rgve05fnqyOP+OHaSGwHcPcgbiZHKL
GuuP3PhuYgZ8VN8InxMDWeaXqlcwLnPcQ9x+vTrgMadAP2IXbAh2kd9V4Zvx
m3nfN609OfNpNh8v2XyQh0W/A9uc+rTIZETWqlifDD2pn2fVv8mnyRGIJyfE
dBGXU0yzNuQm2Fdyhwfs2RbJxX7kysTaQ0I9xcXL8FhnPGM1T5+wd3nfUQvo
21ryv5uFxLfRj3v37L3qAmOSz7LGrCO5a624eHNQRr9qaVrLI3b+TIZs7I/o
XirAh7g7Zqsh1gTfOyx4js5l+1mmuPMc1i2HG+8wJ0gImU8okR8xI/l7Ele+
bjqNtvfE5WFOU1dGfc8OxsbOd7Z3o0wWXzZkLXofF+CLT+Us5v1eVZrmFNC6
2Bgl8g1rjVsibVqZbJWxMcokB3Up4uVrJT+/3lVGPruCseGFLSZvKtm3NoM/
dQa+R6bVQxLKq4mUwKsygwcykD8eUw7dUmTgzBQTK5GzYrubvcfE+Qby3MuL
4IMseflDOUlc/SwtryCm58wlNV58Lt9+qeF3LTAm548aLDlasoeJVfDROyVO
yDB9X+rqyUcsg8+/y2QiduS7QJLj4GvxVcRkz5p82HHi62n2HhtA3LVBcueD
+iB1GGrpyW+/iPFqjUej8YR36u/X3kkSl9MONN0bxH0DbZScH8OPEufnxVXv
VhIX31OLTPJi4kq+LX5TXB63Qgr8/v3dQOLq7Jxbv8bP9yZ+68/3AfIgcia/
hkstY4qUEPO/UyQuVyfuT76HkteutvOclu9QWyE3SuzcbjvHbztW2tckLo9g
vxIbfE2C3zFl9CUv5BtN8pvApftS1nKRuPpuybZHXP6X+dvWUuh/YTQHOQ==

                "], {{0, 58}, {60, 0}}, {0, 255}, ColorFunction -> RGBColor], 
               
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], BoxID -> 
              "{\"type\":\"Image\",\"message\":\"SizeLimitReached\",\"\
imageData\":{\"imageSource\":\"data:image/png;base64,\
iVBORw0KGgoAAAANSUhEUgAAAB4AAAAdCAYAAAC9pNwMAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAA\
AOxAAADsQBlSsOGwAABL5JREFUSIm1l2mIllUUx393Rs1sUUizKNFSTPODhbbYouRMtmglWGhZQYlt\
QmL0oUUliEpbRLRMKwk0W6XUD1k2ViSCGmkoWplLWDqU0zK5TGYzvz7c8+LTOONMUAdenvvcc885/\
3vP/57zvNAKUTur96vt1DvUfgVdT3Wc2l69Rz2jNT7btBBwDPATMBw4D9gDTAKmAZtjWV9gIlAGDAW\
GqM8AA1NKL7UGRDHgyfE8oD6r3quuU0cfw+bKWDNJnarWxXyn1gYdoFarSV2kblev+RegL1W3qkvi/\
Xu1ovG6po76WuA04GlgQ0ppbMFpW+\
A64AogFXxsBN5OKdWklFYDvdX71OnAmcAYYGUxSCo4HUnOUy3wEVAPTCjlSZ0A9Azd8TFuC+\
wCqoFBwCnA1JTSPvUmYFEAK3Gl91F5j+P5Vj1dnaz2jPkO6jz1GnWG+pu6XH3DI/\
KnulQdor6qnhO23dTH1B7qBvX7pnKzqeCkWm0TeZ6rDla3hP67uDaT432W2hDjWnWUOl/\
tqparO9XDod/eVOCr1Tp1l1oZc+PVa9WvCrubpP6uzlSnqJXqrwX9frVCfSV8XKRuUw+\
pt5TilakD1VXAGqAP8EJKqUptDwyM3PWJ9T8Ah4GTgMsAgduCFyU5AZgOrFIvTimtBeYC/\
YFl6gq1AnV0IF2v7lG3BtLh6sjYXUkeUL+J8V+x+3nmK9dYKtU54WuDWqN+\
FrqJZcBq4CBwPnA68GEgHwDsj90BfAJ0BXrHezlwN/\
B82DeWYcCfMX6HzPjLgTrgfcwkukBdEnk7MVBOU28NhIfUEQWSlOSwuttMqLWNdO+\
oT4av9upz6jIz88vLgO3kGvs4cGfslMifMX4DGAy8BNTEXD1wb8wtABYDTwANoW/\
gSJ3oE2tnAf2AHUReS2xUHRwoH1WHxm57ma/Yk+rNTeSzJFWh36w+pc4OX/\
1DfzCeNWXkzlIfbPwU2BsoPwc6A/\
OBXuQyuiXGM4CFsX5b5A2gArgIWA98XDixfcBScsVrAKakQNQLOBc4BLxFJtBv5GtwF5lAdwMryGXy\
BOBAgJsKjCMTrCGOchDwOvmKfgd8GxusBXallDahlgWx5qjvxlGMC0Bjg1QfNnO0DeZ2OL4w94t6uf\
pi+BgR85+qsyNWOaEs1l3V683lMpnrc4W6ppngX5tL4wvqXvUq9TWjD8d7UaooidoxAqyL50J1ceja\
mT8GbjYXkB+bCP5IrBsctt3C9mX1A3Oj+DzAdaZA9xKAMqAT+cIPBQaklNaH7kbganIhqQa6RL5/\
AtqFbjcwM6VUp/YNMn5BLia1KaX6UqxiP+\
4A7AROLWAZTr6bD6aUVqptgEuAiwNgAv4gfwisTCn9rl4YZHyIfzb/\
GqBHSukAjSWIUm0mTZV6Soz3qd2PMjjavqu5Xzeop5krVb25To9qyTipbeM3JICoPtyKwLfH2p/\
NTeI4o6+3ZFtycEYwtCjL1FOPYdMxyFSUX5s7qWaRxNFMAk4mf2d9SSbQWeSKNZ9cMG4jV6y9wHLgb\
DI36oA5KaWFrdptSxK5e9PcY1er76k9/hPnzQTsry5Qd5g/ebqrXcx/bTaai9Cg/\
yNwpXqD2q4JXbk6TB3fWn9/A9izhAbbZ9AzAAAAAElFTkSuQmCC\",\"boundingBox\":{\"\
width\":30,\"height\":29,\"baseline\":19}},\"plotRange\":[0,1,0,1]}", 
              DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
              Magnification[0.5], ImageSizeRaw -> {60, 58}, 
              PlotRange -> {{0, 60}, {0, 58}}], 
             StyleBox[
             "\"WOLFRAM CHALLENGES\"", ShowStringCharacters -> False, 
              FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
              "Normal", FontColor -> GrayLevel[1]]}}, AutoDelete -> False, 
           GridBoxAlignment -> {
            "Columns" -> {Left, Left}, "Rows" -> {Center, Center}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         Appearance -> None, ButtonFunction :> 
         SystemOpen["http://challenges.wolfram.com/"], Evaluator -> Automatic,
          Method -> "Preemptive"]}}, AutoDelete -> False, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellMargins -> 0, GeneratedCell -> True, 
   CellAutoOverwrite -> True, CellFrameMargins -> {{60, 0}, {4, 6}}, 
   CellFrameColor -> RGBColor[0.9961, 0.3098, 0.21569], 
   ShowStringCharacters -> False, Background -> 
   RGBColor[0.9961, 0.3098, 0.21569]], 
  Cell["", "Text", CellMargins -> 0, ShowCellBracket -> False, 
   CellElementSpacings -> {"CellMinHeight" -> 5}, CellFrameMargins -> 3, 
   FontSize -> 1, CellFrame -> 0, Background -> 
   RGBColor[0.9686274509803922, 0.9137254901960784, 0.403921568627451]]},
TaggingRules->{
 "WolframChallengesInternal" -> 
  Association[
   "PacletVersion" -> "2.17.205", "FrameworkVersion" -> "public-2.17.205", 
    "PacletBuildDate" -> 
    DateObject[{2018, 4, 12, 2, 0, 29.8383958`9.227350380539981}, "Instant", 
      "Gregorian", 0.], "NotebookBuildDate" -> 
    DateObject[{2018, 4, 12, 3, 28, 35.390848`8.30146594850453}, "Instant", 
      "Gregorian", 0.], "Hash" -> "71575fb9456cb036", "Key" -> 
    "public/pub/p-71575fb9456cb036", "CheckerAPI" -> 
    CloudObject[
     "https://www.wolframcloud.com/objects/wolframchallenges/public/api/\
check"], "SearchNames" -> {"NimWin"}, "Status" -> "Published", "Source" -> 
    CloudObject[
     "https://www.wolframcloud.com/objects/wolframchallenges/public/pub/p-\
71575fb9456cb036"], "ReviewNotebook" -> False]},
ShowAutoSpellCheck->False,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 20, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], ShowCellBracket -> False, ShowGroupOpener -> False, 
    CellMargins -> {{65.14453125, 30}, {0., 30.}}, 
    CellFrameMargins -> {{66, Inherited}, {Inherited, 20}}, FontFamily -> 
    "Source Sans Pro Light", FontSize -> 50, FontColor -> 
    RGBColor[0.1843137254901961, 0.6509803921568628, 0.6941176470588235]], 
   Cell[
    StyleData["Section"], CellFrame -> {{0, 0}, {0, 1}}, ShowCellBracket -> 
    False, ShowGroupOpener -> False, 
    CellMargins -> {{66, 30}, {Inherited, 35}}, Deployed -> True, 
    CellFrameMargins -> {{0, Inherited}, {Inherited, 10}}, CellFrameColor -> 
    GrayLevel[0.7137], FontFamily -> "Source Sans Pro", FontSize -> 17, 
    FontWeight -> "DemiBold", FontColor -> Hue[0.51, 0.817, 0.72]], 
   Cell[
    StyleData["SectionNoLine", StyleDefinitions -> StyleData["Section"]], 
    CellFrame -> {{0, 0}, {0, 0}}, CellMargins -> {{49, 30}, {4, 0}}], 
   Cell[
    StyleData["SectionOnlyLine", StyleDefinitions -> StyleData["Section"]], 
    CellMargins -> {{66, 30}, {4, 35}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, CellFrameMargins -> 0, 
    FontSize -> 0.1], 
   Cell[
    StyleData["Subsection", StyleDefinitions -> StyleData["Section"]], 
    ShowCellBracket -> True, ShowGroupOpener -> True, WholeCellGroupOpener -> 
    True], 
   Cell[
    StyleData["Text"], ShowCellBracket -> True, 
    CellMargins -> {{66, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Item"], CellDingbat -> 
    StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
      RGBColor[0.21176470588235294`, 0.6941176470588235, 0.7490196078431373]],
     CellMargins -> {{81, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Description"], ShowCellBracket -> False, 
    CellMargins -> {{71, 30}, {0, 10}}, 
    AutoStyleOptions -> {
     "LocalVariableStyle" -> {FontColor -> RGBColor[0.263, 0.537, 0.345]}}, 
    LineSpacing -> {1.2, 0}, FontFamily -> "Source Sans Pro", FontSize -> 20, 
    FontSlant -> "Plain", 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    GrayLevel[0.3]], 
   Cell[
    StyleData["WCIntroDivider"], Editable -> False, Selectable -> False, 
    Deletable -> False, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {-2, 35}}, ShowStringCharacters -> False], 
   Cell[
    StyleData["WCIntroDividerLine", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    CellFrame -> {{0, 0}, {0, 8}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, 
    CellFrameMargins -> {{0, 0}, {-1, 0}}, CellFrameColor -> 
    RGBColor[0.9961, 0.3098, 0.21569], FontSize -> 1], 
   Cell[
    StyleData["SubmitRow"], Editable -> False, Selectable -> False, Deletable -> 
    False, CellFrame -> {{0, 0}, {0, 2}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 30}}, 
    CellGroupingRules -> {"SectionGrouping", -5}, 
    CellFrameMargins -> {{Inherited, Inherited}, {20, 20}}, CellFrameColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["StandardForm"], FontSize -> 16], 
   Cell[
    StyleData["CodeFont"], FontSize -> 
    FEPrivate`If[False, 0.907029 Inherited, Inherited]], 
   Cell[
    StyleData["RefLink"], TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        ButtonBox[#, ButtonData -> #2, BaseStyle -> Dynamic[
           If[
            CurrentValue["MouseOver"], {
            "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
            "Link"}]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {BaseStyle -> "Link"}], 
   Cell[
    StyleData["InlineCode", StyleDefinitions -> StyleData["StandardForm"]]], 
   Cell[
    StyleData["SmallText", StyleDefinitions -> StyleData["Text"]], FontSize -> 
    0.975 Inherited, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.21176470588235294`, 0.7058823529411765, 0.7490196078431373]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["SubmitButton"], ShowCellBracket -> False, 
    CellMargins -> {{66, Inherited}, {25, Inherited}}, ShowCellLabel -> False,
     TextAlignment -> Center, ShowStringCharacters -> False], 
   Cell[
    StyleData["SigninText", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSize -> 12, FontColor -> 
    GrayLevel[0.25]], 
   Cell[
    StyleData["ButtonLabel", StyleDefinitions -> StyleData["Text"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontFamily -> 
    "Source Sans Pro", FontSize -> 18, FontWeight -> "DemiBold", FontColor -> 
    GrayLevel[1]], 
   Cell[
    StyleData[
    "ButtonLabelActive", StyleDefinitions -> StyleData["ButtonLabel"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["Notebook"], ShowAutoSpellCheck -> False]}, Visible -> False, 
  FrontEndVersion -> "12.1 for Microsoft Windows (64-bit) (March 20, 2020)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"7a58039e-6a07-487b-9893-068682472229"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "NoLabel"->{
  Cell[11618, 382, 1108, 26, 57, "Input",ExpressionUUID->"6cc5691d-295f-4b3f-835d-9c2ca1c99f43",
   CellTags->"NoLabel"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"NoLabel", 37729, 910}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 85, 0, 94, "Title",ExpressionUUID->"2ae6c90c-1ca3-49b1-8dbe-d7aab3fb3511"],
Cell[668, 24, 691, 21, 69, "WCIntroDivider",ExpressionUUID->"ce29152f-1f39-4d97-82b1-b424bb0e36db"],
Cell[1362, 47, 85, 0, 26, "WCIntroDividerLine",ExpressionUUID->"3d161d49-893a-4dcd-8d3b-221d3e665d41"],
Cell[1450, 49, 406, 6, 98, "Description",ExpressionUUID->"7e221559-79ed-4634-a02f-1b3e4ec3ba95"],
Cell[CellGroupData[{
Cell[1881, 59, 86, 0, 72, "Section",ExpressionUUID->"d3782c7a-996d-4e40-8a1b-81bf3a3613d4"],
Cell[1970, 61, 123, 0, 30, "Text",ExpressionUUID->"2d2b6791-fcb9-4f1e-aaf2-1588e05c2045"],
Cell[2096, 63, 251, 5, 30, "Text",ExpressionUUID->"c77a14d1-d376-4e99-a967-00875d4ba496"],
Cell[2350, 70, 238, 4, 55, "Text",ExpressionUUID->"69b33224-1475-470c-8c3b-6479fea1c25f"],
Cell[2591, 76, 163, 3, 30, "Text",ExpressionUUID->"e2a4606e-84ab-43cb-abaf-c7328394f7de"],
Cell[2757, 81, 337, 6, 55, "Text",ExpressionUUID->"db337fa1-7c62-4b55-881a-f61a78ce53fe"],
Cell[3097, 89, 171, 4, 30, "Text",ExpressionUUID->"0b8468e2-f96c-4c86-bb85-a168f2074d4d"],
Cell[3271, 95, 263, 4, 55, "Text",ExpressionUUID->"7ddb05ef-c165-4ab9-bbda-87ec0b93b2fd"],
Cell[3537, 101, 483, 11, 55, "Text",ExpressionUUID->"53dadcdb-c8b3-42d7-814b-403e53251864"],
Cell[4023, 114, 379, 7, 82, "Output",ExpressionUUID->"0a033b3c-dee3-4a71-871e-84b65697cc45"],
Cell[4405, 123, 380, 8, 55, "Text",ExpressionUUID->"a2a2018a-cd6a-4ec8-83ed-815eaac931c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4822, 136, 102, 0, 72, "Section",ExpressionUUID->"1a382516-fce3-4d25-93b8-5fd5e44bde7d"],
Cell[4927, 138, 504, 11, 82, "Text",ExpressionUUID->"5310a9ba-63b6-4867-97e9-1aba452f32f2"],
Cell[5434, 151, 143, 2, 30, "Text",ExpressionUUID->"8c7b2c1b-334d-4e0a-a201-33faf5d4f94f"],
Cell[CellGroupData[{
Cell[5602, 157, 349, 11, 29, "Input",ExpressionUUID->"276b544a-6b99-48f7-8ee5-184e78ccfb02",
 Evaluatable->False],
Cell[5954, 170, 153, 3, 33, "Output",ExpressionUUID->"2114cf08-26e3-41a6-8444-9fbb403ab0b6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6156, 179, 90, 0, 72, "Subsection",ExpressionUUID->"2c954fef-d68b-4d71-9304-e6438f02a556"],
Cell[CellGroupData[{
Cell[6271, 183, 327, 10, 29, "Input",ExpressionUUID->"98568864-9115-464b-91ce-18915efd7ff9",
 Evaluatable->False],
Cell[6601, 195, 153, 3, 33, "Output",ExpressionUUID->"70075d61-ccc9-4242-a866-03b931adbeba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6791, 203, 344, 11, 29, "Input",ExpressionUUID->"401cae41-915e-4fb9-8297-e4e2598d42b3",
 Evaluatable->False],
Cell[7138, 216, 154, 3, 33, "Output",ExpressionUUID->"4219521c-e1f4-4ab7-bbfd-4ce7e2888c75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7329, 224, 337, 10, 29, "Input",ExpressionUUID->"4d644019-19b1-4fae-9144-012382dd5623",
 Evaluatable->False],
Cell[7669, 236, 154, 3, 33, "Output",ExpressionUUID->"3469d559-ec7a-4a5a-9d5f-2697eca51040"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7860, 244, 344, 11, 29, "Input",ExpressionUUID->"0f7a3738-7663-41d2-959c-ccfe0719194a",
 Evaluatable->False],
Cell[8207, 257, 153, 3, 33, "Output",ExpressionUUID->"ff298ae8-09e9-410f-8a08-93ac6967be10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8397, 265, 345, 11, 29, "Input",ExpressionUUID->"6d88b7b6-1a71-4bda-9413-65492c422a37",
 Evaluatable->False],
Cell[8745, 278, 153, 3, 33, "Output",ExpressionUUID->"b3a9e4bf-ce55-4779-a9d5-46f16701f885"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8935, 286, 344, 11, 29, "Input",ExpressionUUID->"d5c2b11a-41ca-433c-a093-702789243fe6",
 Evaluatable->False],
Cell[9282, 299, 153, 3, 33, "Output",ExpressionUUID->"d191ca96-41de-47ba-a17b-15273f84ffa0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9472, 307, 344, 11, 29, "Input",ExpressionUUID->"f57ecbb9-cb9f-4548-a443-65421bfd4bf0",
 Evaluatable->False],
Cell[9819, 320, 154, 3, 33, "Output",ExpressionUUID->"5740c7b9-534a-4910-83d4-66a0cc64ea58"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10034, 330, 685, 22, 64, "WCIntroDivider",ExpressionUUID->"667ef227-8444-4e87-83c6-e0e1c194ce5b",
 CellGroupingRules->{"SectionGrouping", 0}],
Cell[10722, 354, 131, 2, 42, "WCIntroDividerLine",ExpressionUUID->"7bb12ef3-3cb2-4f84-9642-1fd70e57f6ce"],
Cell[10856, 358, 662, 20, 67, "WCIntroDivider",ExpressionUUID->"fcf8748e-9d09-4c8e-84dc-b9d930e73178"],
Cell[11521, 380, 94, 0, 42, "WCIntroDividerLine",ExpressionUUID->"b9fcc606-42e8-42ef-9b5f-9b313c2d8f12"],
Cell[11618, 382, 1108, 26, 57, "Input",ExpressionUUID->"6cc5691d-295f-4b3f-835d-9c2ca1c99f43",
 CellTags->"NoLabel"]
}, Open  ]],
Cell[12741, 411, 9805, 210, 105, "SubmitRow",ExpressionUUID->"b772478e-71b5-48ba-ad38-4db347ae9068"]
}
]
*)

