(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     43675,       1063]
NotebookOptionsPosition[     23855,        688]
NotebookOutlinePosition[     39280,        987]
CellTagsIndexPosition[     39210,        982]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fewest Number of Coins", "Title",ExpressionUUID->"118942b8-3125-4b55-a4f6-cddad76c87c5"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"THE CHALLENGE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellMargins->{{66, 0}, {-2, 
  37}},ExpressionUUID->"a33d7ce9-5cb9-4a74-8c3c-ac0a3ad37526"],

Cell["", "WCIntroDividerLine",ExpressionUUID->"cdf8d3f6-89af-46a2-9176-1bdc0cdb430e"],

Cell["\<\
Given a list of values for coins, write a function that finds the fewest \
number of coins needed to add up to a certain value.\
\>", "Description",ExpressionUUID->"9ebff8f2-eb74-4165-9a7b-485b2b82822f"],

Cell[CellGroupData[{

Cell["More Details", "Section",ExpressionUUID->"5a03a40f-7786-40dd-9719-b711245dc4e3"],

Cell["\<\
To make $0.67 with American coins, 67 pennies work. But the fewest number of \
coins needed to make this change is 2 pennies, 1 nickel, 1 dime, 0 quarters \
and 1 fifty-cent piece. The answer would be {2, 1, 1, 0, 1}.\
\>", "Text",ExpressionUUID->"6a3bdbcf-6c2f-4807-b2d3-a884db56aa04"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What Your Function Should Do", "Section",ExpressionUUID->"95636ddb-14ab-4510-95b8-d01a990d3e1e"],

Cell[TextData[{
 "Write a function ",
 StyleBox["Coins", "InlineCode"],
 " that takes a list called ",
 StyleBox["values", "InlineCode"],
 " of positive integers and a positive integer ",
 StyleBox["target", "InlineCode"],
 ". Your function should return all lists of the number of coins to make the ",
 StyleBox["target", "InlineCode"],
 " with the fewest number of coins possible, all of whose denominations are \
in ",
 StyleBox["values", "InlineCode"],
 ". Return the list of ways in Sort order."
}], "Text",ExpressionUUID->"1d23666f-e6fa-4f23-a55e-02eece028b34"],

Cell["\<\
In the following example, the fewest number of coins to make 35 is 4. There \
is only one such case:\
\>", "Text",ExpressionUUID->"a0e8e527-5b59-499e-96ea-b2655fa95a89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["Coins",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "8", ",", "16"}], "}"}], ",", 
   "35"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[1]:=",ExpressionUUID->"8875a596-28a1-4962-8211-9ddbf9d8d1e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "2"}], "}"}], 
  "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[1]=",ExpressionUUID->"bd7dff02-1dd8-4998-850c-8b8f14c93fca"]
}, Open  ]],

Cell["Verify these sum to 35:", "Text",ExpressionUUID->"9736a3bf-031e-413b-ace7-68975903c293"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", " ", "1"}], "+", 
  RowBox[{"1", " ", "2"}], "+", 
  RowBox[{"0", " ", "4"}], "+", 
  RowBox[{"0", " ", "8"}], "+", 
  RowBox[{"2", " ", "16"}]}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[2]:=",ExpressionUUID->"9cfc4a3f-9976-498d-8272-e2819818b885"],

Cell[BoxData["35"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[2]=",ExpressionUUID->"494cfac7-3338-4367-9616-da5f48e4e6c0"]
}, Open  ]],

Cell["Alternatively, verify with a dot product:", "Text",ExpressionUUID->"cb610fd6-cbed-43ad-9260-28677a6984c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["Coins",
    StripOnInput->True,
    FontColor->GrayLevel[0]], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "4", ",", "8", ",", "16"}], "}"}], ",", 
    "35"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "4", ",", "8", ",", "16"}], "}"}]}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[3]:=",ExpressionUUID->"a7313981-2aab-409d-a4b7-2264a505233f"],

Cell[BoxData[
 RowBox[{"{", "35", "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[3]=",ExpressionUUID->"b2219707-3614-4b9d-aed2-c45113f2fc28"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "Subsection",ExpressionUUID->"6ab2470c-9bbd-4f0b-a31c-18272bd95a7e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["Coins",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "10", ",", "25", ",", "50"}], "}"}], ",", 
   "67"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[4]:=",ExpressionUUID->"af60e295-bc58-4077-b5b9-18f430f3626c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"2", ",", "1", ",", "1", ",", "0", ",", "1"}], "}"}], 
  "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[4]=",ExpressionUUID->"433a5f5d-6eb9-40a6-a8d7-ddabd5d6f4b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["Coins",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "8", ",", "5"}], "}"}], ",", "9"}], 
  "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[5]:=",ExpressionUUID->"b222c653-9ab8-46cd-8ea9-c2c703181686"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], 
  "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[5]=",ExpressionUUID->"91e01169-7851-4a5f-9f26-56c15bfc48f0"]
}, Open  ]],

Cell["\<\
There may be multiple ways to use the fewest number of coins possible:\
\>", "Text",ExpressionUUID->"89577440-6567-475f-9b0b-2403b30f1caf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["Coins",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "8", ",", "5", ",", "11"}], "}"}], ",", "9"}],
   "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[6]:=",ExpressionUUID->"5a82b3ef-4863-49c6-8e07-f65b2099e759"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[6]=",ExpressionUUID->"b5bf65b6-a999-4efa-886f-4d41907fa45a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["Coins",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"11", ",", "13", ",", "17", ",", "19", ",", "23"}], "}"}], ",", 
   "100"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[7]:=",ExpressionUUID->"06a24c54-f995-4131-964d-ddfbeb66b7b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "4", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "1", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "3", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "0", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "3", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "0", ",", "1", ",", "2"}], "}"}]}], 
  "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[7]=",ExpressionUUID->"f578ed8d-e40c-4222-8362-ed1ca0345441"]
}, Open  ]],

Cell[TextData[{
 "The list is returned in ",
 StyleBox["Sort", "InlineCode"],
 " order:"
}], "Text",ExpressionUUID->"cbb8d1fb-8e80-4a5d-9eff-d1b7edb130e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["Coins",
    StripOnInput->True,
    FontColor->GrayLevel[0]], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"11", ",", "13", ",", "17", ",", "19", ",", "23"}], "}"}], ",", 
    "100"}], "]"}], "===", 
  RowBox[{"Sort", "[", 
   RowBox[{
    StyleBox["Coins",
     StripOnInput->True,
     FontColor->GrayLevel[0]], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"11", ",", "13", ",", "17", ",", "19", ",", "23"}], "}"}], ",", 
     "100"}], "]"}], "]"}]}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[8]:=",ExpressionUUID->"c1ef344c-74c8-41fc-932e-cef314382907"],

Cell[BoxData["True"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[8]=",ExpressionUUID->"9eae8a52-427a-41ab-802c-d254f5cea54e"]
}, Open  ]],

Cell["If no such solution exists, the empty list {} is returned:", "Text",ExpressionUUID->"9158e898-9228-4838-92c1-59ace2b81cfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["Coins",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
   "17"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[9]:=",ExpressionUUID->"07c2cd0a-aef0-490f-8663-05f1e8787d31"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[9]=",ExpressionUUID->"2df796d0-9066-41c4-a69a-2ecb0a1fa5fa"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"SCRATCH AREA\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->GrayLevel[0.65],
  FrameMargins->{{13, 13}, {2, 5}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellGroupingRules->{
  "SectionGrouping", 
   0},ExpressionUUID->"a9506c77-dc20-43fb-add1-6ff5f15c47a8"],

Cell[BoxData[""], "WCIntroDividerLine",
 CellFrameColor->GrayLevel[
  0.65],ExpressionUUID->"164f68af-3f8a-43be-be4a-e4b0f21d0ec9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7962247518583*^9, 3.7962247537439933`*^9}, {
  3.796224894521084*^9, 
  3.7962248959265966`*^9}},ExpressionUUID->"663347b1-97a4-4534-8674-\
6a7d23f9fc77"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"ENTER YOUR CODE HERE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",ExpressionUUID->"f3676864-542c-4b13-\
9c6b-cd90f01360f9"],

Cell[BoxData[""], "WCIntroDividerLine",ExpressionUUID->"cde73b5a-2548-4c52-8e3a-837dbdbe66e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Coins", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x__Integer", "?", "Positive"}], "}"}], ",", 
     RowBox[{"target_Integer", "?", "Positive"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vars", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         SubscriptBox["y", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"{", "x", "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Sort", "@", 
      RowBox[{"MinimalBy", "[", 
       RowBox[{
        RowBox[{"Values", "/@", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"vars", ".", 
              RowBox[{"{", "x", "}"}]}], "\[Equal]", "target"}], " ", "&&", 
            " ", 
            RowBox[{"vars", "\[GreaterEqual]", "0"}]}], ",", "vars", ",", 
           "Integers"}], "]"}]}], ",", "Total"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.796224879942624*^9, {3.7962249531057243`*^9, 3.7962249537146626`*^9}, {
   3.7962249976180563`*^9, 3.7962250048769093`*^9}, {3.7962252201083746`*^9, 
   3.7962252268288436`*^9}},
 CellTags->"NoLabel",
 CellLabel->"In[2]:=",ExpressionUUID->"b2e21f2b-c064-44a2-82bb-0f84a6deebe4"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   DynamicModuleBox[{
    WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}, 
    ButtonBox[
     DynamicBox[
      ToBoxes[
       If[
        TrueQ[WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$], 
        Framed[
         Panel[
          ProgressIndicator[Appearance -> "Percolate", ImageSize -> {60, 20}],
           Background -> White, ImageSize -> {100, 20}, FrameMargins -> 0, 
          Alignment -> Center, Appearance -> "Frameless"], Background -> 
         GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
         RoundingRadius -> 3, Alignment -> Center], 
        Mouseover[
         Framed[
          Panel[
           Style["Submit", "ButtonLabel", ShowStringCharacters -> False], 
           Background -> RGBColor[0.9961, 0.3098, 0.21569], 
           ImageSize -> {100, 20}, FrameMargins -> 0, Alignment -> Center, 
           Appearance -> "Frameless"], Background -> 
          RGBColor[0.9961, 0.3098, 0.21569], FrameStyle -> 
          RGBColor[0.9961, 0.3098, 0.21569], RoundingRadius -> 3, Alignment -> 
          Center], 
         Framed[
          Panel[
           Style[
           "Submit", "ButtonLabelActive", ShowStringCharacters -> False], 
           Background -> GrayLevel[1], ImageSize -> {100, 20}, FrameMargins -> 
           0, Alignment -> Center, Appearance -> "Frameless"], Background -> 
          GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
          RoundingRadius -> 3, Alignment -> Center]]], StandardForm]], 
     ButtonFunction :> ((
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = True; (Off[
         MessageName[$CharacterEncoding, "utf8"]]; ((If[
          Not[
           TrueQ[
            WolframChallenges`$NotebookInitializedQ[
             Hash[{$SessionID, 
               Last[
                EvaluationNotebook[]]}]]]], 
          CloudGet[
           FileNameJoin[{
             CloudObject[
             "https://www.wolframcloud.com/objects/wolframchallenges/public/\
symbols"], "InitializeNotebook"}]][]]; If[
          Not[
           ValueQ[
           WolframChallenges`Notebooks`Dialogs`RunWithSubmissionPolicy]], 
          WolframChallenges`Notebooks`Dialogs`RunWithSubmissionPolicy = 
          CloudGet[
            FileNameJoin[{
              CloudObject[
              "https://www.wolframcloud.com/objects/wolframchallenges/public/\
symbols"], "RunWithSubmissionPolicy"}]]]; 
        WolframChallenges`Notebooks`Dialogs`RunWithSubmissionPolicy[If[
            Or[$VersionNumber >= 11.1, 
             ChoiceDialog[
              StringJoin["Wolfram Challenges is designed for version ", 
               ToString[11.1], 
               " or later of the Wolfram System, and may not function \
properly with the older ", 
               "kernel you are using. Contact Wolfram Research \
(www.wolfram.com) for upgrade information."]]], 
            If[
             Not[
              StringQ[
               If[
                Not[$CloudConnected], 
                CloudConnect[], $WolframID]]], 
             MessageDialog[
             "Users must authenticate with the cloud in order to submit \
solutions."], WolframChallenges`$SubmissionTesting = False; Quiet[
               Quiet[If[
                  TrueQ[WolframChallenges`Common`$ActiveClearing], 
                  Quiet[
                   Unset[
                    Once["public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]]; Catch[
                  
                  Module[{CodeEquivalence`Utilities`Private`result$}, 
                   Check[CodeEquivalence`Utilities`Private`result$ = 
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]; 
                    Throw[CodeEquivalence`Utilities`Private`result$, 
                    CodeEquivalence`Utilities`OnceUnlessFailed]]; If[
                    FailureQ[CodeEquivalence`Utilities`Private`result$], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]; (Message[
                    "Evaluating `1` resulted in the failure `2`.", 
                    Short[
                    HoldForm["public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]]]], 
                    Short[
                    HoldForm[#]]]& )[
                    CodeEquivalence`Utilities`Private`result$]]; 
                   CodeEquivalence`Utilities`Private`result$], 
                  CodeEquivalence`Utilities`OnceUnlessFailed], 
                MessageName[CloudObject, "invuri"]], 
               MessageName[$CharacterEncoding, "utf8"]][
               Quiet[
                Quiet[If[
                   TrueQ[WolframChallenges`Common`$ActiveClearing], 
                   Quiet[
                    Unset[
                    Once["public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]]; Catch[
                   
                   Module[{CodeEquivalence`Utilities`Private`result$}, 
                    Check[CodeEquivalence`Utilities`Private`result$ = 
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]; 
                    Throw[CodeEquivalence`Utilities`Private`result$, 
                    CodeEquivalence`Utilities`OnceUnlessFailed]]; If[
                    FailureQ[CodeEquivalence`Utilities`Private`result$], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]; (Message[
                    "Evaluating `1` resulted in the failure `2`.", 
                    Short[
                    HoldForm["public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]]]], 
                    Short[
                    HoldForm[#]]]& )[
                    CodeEquivalence`Utilities`Private`result$]]; 
                    CodeEquivalence`Utilities`Private`result$], 
                   CodeEquivalence`Utilities`OnceUnlessFailed], 
                 MessageName[CloudObject, "invuri"]], 
                MessageName[$CharacterEncoding, "utf8"]][
                CloudObject[
                "https://www.wolframcloud.com/objects/wolframchallenges/\
public/api/check"], {"Coins"}, "public/pub/p-428c0dc34253f616"]]]]; 
          Null])& )[]); 
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False; 
      Null)& )[], Appearance -> None, Method -> "Queued", Evaluator -> 
     Automatic], 
    Initialization :> {
     WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}, 
    DynamicModuleValues :> {}], 
   TemplateBox[{10}, "Spacer1"], 
   DynamicBox[
    ToBoxes[
     Refresh[Off[
        MessageName[$CharacterEncoding, "utf8"]]; If[
        Not[
         TrueQ[$CloudConnected]], 
        Column[{
          Row[{
            Text[
             Style[
             "Note: ", "SigninText", FontWeight -> "DemiBold", Background -> 
              None]], 
            Text[
             Button[
              
              PaneSelector[{
               False -> "Sign into the Wolfram Cloud", True -> 
                "Sign into the Wolfram Cloud"}, 
               Dynamic[
                CurrentValue["MouseOver"], 
                ImageSizeCache -> {48., {1., 12.}}], 
               BaseStyle -> {"SigninText", 
                 RGBColor["#36b1bf"]}, FrameMargins -> 0, ImageSize -> 
               Automatic], 
              CloudConnect[], Appearance -> None, Evaluator -> Automatic, 
              Method -> "Queued"]], 
            Text[
             Style[
             " to save your work on ", "SigninText", Background -> None]]}], 
          Text[
           Style[
           "Challenges and keep track of progress.", "SigninText", Background -> 
            None]]}, Alignment -> Left, Spacings -> 0], 
        Invisible[""]], UpdateInterval -> 1], StandardForm]]},
  "RowDefault"]], "SubmitRow",ExpressionUUID->"18ae8bca-fdfb-4790-8ec8-\
e1b2ac8605e1"]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        ButtonBox[
         TagBox[
          GridBox[{{
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJzVmguUlVUVx4eXTDAoMSKGyEMFEc0oKRCmDBIMTSpEKkFGRh6ZNBCgaJGD
+QDKB1SKBoQouVKyJDGNkcBkWUG+SgXJ1JKsMAvIMJ+7/evsb90z557vfneu
F1zutf4z3+Ocs/c+j/36bq+66aOntKyoqJhVqX9GT5wzdObMiRef0VFvzqyf
dd7U+smTRtbPnjx18sxBda304WBFjaJ1RflJRFopOpZhnPcyVjlk2lek8p2h
+Ktiod13U6xQ/EIxFx0ifToqvmptbqKPPZ+v+Jti7P7WI41Ulh6KIXbdRfFf
cVRruv5ZcsS7oZExhnr9oOetb63dv6o4zNqeCM/9rafxPkXxsmKV3Y/2ZJ6J
jIovKtYo7lAMLDDWR6zNT60P+n7FG2+MtVup+I9ixP7S05PxKZPldruvUbzm
ybinlLWwedrjjfO6t4dus2fbyq1PRI4DFX29+7eM96N21sazhuLO66q3swba
d7jiFhtrkGKc8XjEeMK7pbU9RnFQOXT0+LO/nlHc4z3zzya0U8zW7APefw94
7fDer1U8W07eOtZ644NdaWPPBit+otiqWK3oVS5+Ef49jceTxnOwPW+peMVk
21gmXp2Cue1jz9s0c5wDFMcpRtnen6Q4U/FRxSHNHCuZ8+6BbJ2bM07K2IcH
Yz6t2Kt4U7E4o++hiumKDbYOu8SdwUbDJsVz4s7jHxRLFCcpWhQYc6Hx3mt9
fOpZoo7DFP3tuoXiT5JPbyhqUvofJS52QKZ7FecqjijAr71ihOLb4s7qE4qz
xWxS0Haw8Q7p+WSe9P/xipFF6nq4rcN2RaU9O9fmNKHdyBPp21oxT5xfvlHs
TJv+08TZ7V8r/mh4XHG34grFyYo24vZ9nc3xrxTHRfiMNxkTQrZae9fWZP+3
onsR+i7zxpnhPT9S8Vlx569TpF9Xk+9hxQfE2ZIxige98fDZN0fWJiHWlv1K
rPYexZU2d+dE+HUyWYhzjvSef9kbb3kR+m7z2nNWK8XFdthF9ma/SB984HM2
V8zv8aa7T0mcOKCAvgmxdpx7zhK++F+KSyJ8+5pMd5qMyLrdG2d7EfpuDXi/
5F0Ty3YK2nczXa60+4mS8xEJESMRi4y0uXkmeL8mRe97FAeJs+v494sia/xq
iqxQZhymba5P4Q3dGrRlLR9SLLH7i1P6sS8/JG4eLlJ8y3v3PXFn9q1IP+gx
RWfFh8Xt7VMDGVYWkPf6IvTtIe6sh8Qadg3aXiNu3yLvlBSeLyg6KLbYPT5o
oF0vEmejmLd/FJAbG8dexWa/KJ6f1ev3mWwhoUPPFB05Jy29+0+Jyz0hbPEK
xg36cEaZb87QB6XpvvJphuJ07x5bij063/Tk7PUTZ68L0Q3GlxxqWSALfv77
4s65mOyjvPfYzhbe/ScUmxW9gzmosuv2kTn6seJqcfWMh1JkJM+pEudzfKoV
53Mb7f79kssF0oj9Tq6MnyCuPSqQp739rwp0O9p0O9l7douNyXkf4Ok7S5yd
WBOMjT99xeb1rAIy4oOxZ2F8wFyd5t0j0wMZ+kIPGn982pJAJvYJZ2K25OKO
ExT/tL4rvbaPemOiXx9p6ofXBWNfqlht1w+nyMa+xUbNi7zjHHTz7rsXqS9E
bYBcG5/V1pPpXq/NCnFrstN7tsVr+8tgzL3B/c2Bvuj4OcWxBeSiXoWdejHl
Pf2pW+GrDpHi9V0gbu9hB4d7Mt2UocMmr21DBo8JXlvyftYOHzErpT3zh81u
THkPUZc5VfExRTspXt9tJgex6TxPrvEZ/S7z2lL7DPP3hNjrbby21Mz+Yte3
RtqzXsQHFxQhO/WfswIbUgwdrJijuM2TC7+2OaU9cWKT2qi4M/tk0O4+RZeg
HfswsRu/jYy92OTZXaTs2F3iFHKNJUX2wX9T+90cyEYs9vOgLfFiH69NB+8a
H/ElcfaI+uMECXJxcXHF3XYd5p/YB+rJlxUh88vBPetLTHFO5F1InxSXP24N
ZOtsMo8wHfDxVb6u4vYAc9I/6Jf41HERfdfa9VPSlPAF5DWJjWJuN0bkxX8e
aJgqufoUdrCPIW1vQuQQp0T0TXwj+XMX73l/cfYbnZK55Cxhf4gf1ntjXxrZ
z5vs+jdeO74rYHeoJbJHLxHnn2Ox6WvW9+vi7NVS7x3tyTk4j5eLswchkWN9
njEC2Xzfh/3jjMyQXJ14b0Sex4P7BcGY1Ed32PUqr129PWMedyjGils/fM13
IjJnEfX3rqbbY8E78iLyjh8Gsl2RoQs+YV0G3/HBmOjwhumRfAPg3LKPD5Om
sRR2iDPzuyzlUoi1qBfn2xrExehPmxzUK+cFso3LGA9d0+pBED6qXUVA4uwy
Z6WvtZtrzy/0+hL/s5++21wlA8LX/7+mLq7OTI2L+J/zMyyQi/MUq7VBnLEa
a1cr+fEIOQbxJ/WRg4NxGyRns4gpqu3atzH4X+Ig/MZgGwvf/WlxdvMbiuXi
6uWPmPx+jSwhfCf2c7Xd44vIG4iLD/BkqjZZiWFfCMbAPk4KdCCGvUHc2l0n
zod+wdqvDdr2EvtuJ1bvEBcP+zk7372oX00x3dGPWJBzRx5L7bkqGJf9kJzZ
060vueJsG/N+a/cDZAz6JjWScSb7daYLeUDviiJIXJ6d0IjgHfN9o3d/fmRt
smiB9eX7AXWAu8TlVA2K88TFiNRG3jSwT8ilmuSD4urHCTWJQVL0amvzTZ5P
DoBPIvbwfcGKoA/tyAmPtfssuxcj/ERf6w//tJoOtMja/Uws9/dk8XM5bFGV
6dDPdGLsSq89+8g/v9QJwjhhY2SeqJ2yZ7Cfid9tLt3njZcWl603HnyDwa5U
B3KsD9rfL7laB8S6tA76/ChDriY1FOuDDOz55XZPvFKKzmOtP/YtrFUSc2Gb
8fusyfCIHEulMN0Z6UPMlVaDgk4SZ2vDecJOYUOvtXtsUSymKkTEJ0ntCN2e
sOfojr+nNkmMekHAm31JXDOkwNicmQGhvtYfffZE+mAPa+yavdMh6HeEOH+b
xPz45Q3N1HmhNx61iTq7HmkyXRjwbCe5fcw3xlWRMZn3MTFdvXGoHfKtBxtw
uzj/zth+PntHSj/y/N9LrgZGjYqcspg9zjoc7Y2HzbnKdB0X4bfa6zvHZFxs
Mi8zHQ4tpGvGPMwP5MvbI+Js4lybV+rgve05fnqyOP+OHaSGwHcPcgbiZHKL
GuuP3PhuYgZ8VN8InxMDWeaXqlcwLnPcQ9x+vTrgMadAP2IXbAh2kd9V4Zvx
m3nfN609OfNpNh8v2XyQh0W/A9uc+rTIZETWqlifDD2pn2fVv8mnyRGIJyfE
dBGXU0yzNuQm2Fdyhwfs2RbJxX7kysTaQ0I9xcXL8FhnPGM1T5+wd3nfUQvo
21ryv5uFxLfRj3v37L3qAmOSz7LGrCO5a624eHNQRr9qaVrLI3b+TIZs7I/o
XirAh7g7Zqsh1gTfOyx4js5l+1mmuPMc1i2HG+8wJ0gImU8okR8xI/l7Ele+
bjqNtvfE5WFOU1dGfc8OxsbOd7Z3o0wWXzZkLXofF+CLT+Us5v1eVZrmFNC6
2Bgl8g1rjVsibVqZbJWxMcokB3Up4uVrJT+/3lVGPruCseGFLSZvKtm3NoM/
dQa+R6bVQxLKq4mUwKsygwcykD8eUw7dUmTgzBQTK5GzYrubvcfE+Qby3MuL
4IMseflDOUlc/SwtryCm58wlNV58Lt9+qeF3LTAm548aLDlasoeJVfDROyVO
yDB9X+rqyUcsg8+/y2QiduS7QJLj4GvxVcRkz5p82HHi62n2HhtA3LVBcueD
+iB1GGrpyW+/iPFqjUej8YR36u/X3kkSl9MONN0bxH0DbZScH8OPEufnxVXv
VhIX31OLTPJi4kq+LX5TXB63Qgr8/v3dQOLq7Jxbv8bP9yZ+68/3AfIgcia/
hkstY4qUEPO/UyQuVyfuT76HkteutvOclu9QWyE3SuzcbjvHbztW2tckLo9g
vxIbfE2C3zFl9CUv5BtN8pvApftS1nKRuPpuybZHXP6X+dvWUuh/YTQHOQ==

                "], {{0, 58}, {60, 0}}, {0, 255}, ColorFunction -> RGBColor], 
               
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], BoxID -> 
              "{\"type\":\"Image\",\"message\":\"SizeLimitReached\",\"\
imageData\":{\"imageSource\":\"data:image/png;base64,\
iVBORw0KGgoAAAANSUhEUgAAAB4AAAAdCAYAAAC9pNwMAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAA\
AOxAAADsQBlSsOGwAABL5JREFUSIm1l2mIllUUx393Rs1sUUizKNFSTPODhbbYouRMtmglWGhZQYlt\
QmL0oUUliEpbRLRMKwk0W6XUD1k2ViSCGmkoWplLWDqU0zK5TGYzvz7c8+LTOONMUAdenvvcc885/\
3vP/57zvNAKUTur96vt1DvUfgVdT3Wc2l69Rz2jNT7btBBwDPATMBw4D9gDTAKmAZtjWV9gIlAGDAW\
GqM8AA1NKL7UGRDHgyfE8oD6r3quuU0cfw+bKWDNJnarWxXyn1gYdoFarSV2kblev+RegL1W3qkvi/\
Xu1ovG6po76WuA04GlgQ0ppbMFpW+\
A64AogFXxsBN5OKdWklFYDvdX71OnAmcAYYGUxSCo4HUnOUy3wEVAPTCjlSZ0A9Azd8TFuC+\
wCqoFBwCnA1JTSPvUmYFEAK3Gl91F5j+P5Vj1dnaz2jPkO6jz1GnWG+pu6XH3DI/\
KnulQdor6qnhO23dTH1B7qBvX7pnKzqeCkWm0TeZ6rDla3hP67uDaT432W2hDjWnWUOl/\
tqparO9XDod/eVOCr1Tp1l1oZc+PVa9WvCrubpP6uzlSnqJXqrwX9frVCfSV8XKRuUw+\
pt5TilakD1VXAGqAP8EJKqUptDwyM3PWJ9T8Ah4GTgMsAgduCFyU5AZgOrFIvTimtBeYC/\
YFl6gq1AnV0IF2v7lG3BtLh6sjYXUkeUL+J8V+x+3nmK9dYKtU54WuDWqN+\
FrqJZcBq4CBwPnA68GEgHwDsj90BfAJ0BXrHezlwN/\
B82DeWYcCfMX6HzPjLgTrgfcwkukBdEnk7MVBOU28NhIfUEQWSlOSwuttMqLWNdO+\
oT4av9upz6jIz88vLgO3kGvs4cGfslMifMX4DGAy8BNTEXD1wb8wtABYDTwANoW/\
gSJ3oE2tnAf2AHUReS2xUHRwoH1WHxm57ma/Yk+rNTeSzJFWh36w+pc4OX/\
1DfzCeNWXkzlIfbPwU2BsoPwc6A/\
OBXuQyuiXGM4CFsX5b5A2gArgIWA98XDixfcBScsVrAKakQNQLOBc4BLxFJtBv5GtwF5lAdwMryGXy\
BOBAgJsKjCMTrCGOchDwOvmKfgd8GxusBXallDahlgWx5qjvxlGMC0Bjg1QfNnO0DeZ2OL4w94t6uf\
pi+BgR85+qsyNWOaEs1l3V683lMpnrc4W6ppngX5tL4wvqXvUq9TWjD8d7UaooidoxAqyL50J1ceja\
mT8GbjYXkB+bCP5IrBsctt3C9mX1A3Oj+DzAdaZA9xKAMqAT+cIPBQaklNaH7kbganIhqQa6RL5/\
AtqFbjcwM6VUp/YNMn5BLia1KaX6UqxiP+\
4A7AROLWAZTr6bD6aUVqptgEuAiwNgAv4gfwisTCn9rl4YZHyIfzb/\
GqBHSukAjSWIUm0mTZV6Soz3qd2PMjjavqu5Xzeop5krVb25To9qyTipbeM3JICoPtyKwLfH2p/\
NTeI4o6+3ZFtycEYwtCjL1FOPYdMxyFSUX5s7qWaRxNFMAk4mf2d9SSbQWeSKNZ9cMG4jV6y9wHLgb\
DI36oA5KaWFrdptSxK5e9PcY1er76k9/hPnzQTsry5Qd5g/ebqrXcx/bTaai9Cg/\
yNwpXqD2q4JXbk6TB3fWn9/A9izhAbbZ9AzAAAAAElFTkSuQmCC\",\"boundingBox\":{\"\
width\":30,\"height\":29,\"baseline\":19}},\"plotRange\":[0,1,0,1]}", 
              DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
              Magnification[0.5], ImageSizeRaw -> {60, 58}, 
              PlotRange -> {{0, 60}, {0, 58}}], 
             StyleBox[
             "\"WOLFRAM CHALLENGES\"", ShowStringCharacters -> False, 
              FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
              "Normal", FontColor -> GrayLevel[1]]}}, AutoDelete -> False, 
           GridBoxAlignment -> {
            "Columns" -> {Left, Left}, "Rows" -> {Center, Center}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         Appearance -> None, ButtonFunction :> 
         SystemOpen["http://challenges.wolfram.com/"], Evaluator -> Automatic,
          Method -> "Preemptive"]}}, AutoDelete -> False, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellMargins -> 0, GeneratedCell -> True, 
   CellAutoOverwrite -> True, CellFrameMargins -> {{60, 0}, {4, 6}}, 
   CellFrameColor -> RGBColor[0.9961, 0.3098, 0.21569], 
   ShowStringCharacters -> False, Background -> 
   RGBColor[0.9961, 0.3098, 0.21569]], 
  Cell["", "Text", CellMargins -> 0, ShowCellBracket -> False, 
   CellElementSpacings -> {"CellMinHeight" -> 5}, CellFrameMargins -> 3, 
   FontSize -> 1, CellFrame -> 0, Background -> 
   RGBColor[0.9686274509803922, 0.9137254901960784, 0.403921568627451]]},
TaggingRules->{
 "WolframChallengesInternal" -> 
  Association[
   "PacletVersion" -> "2.17.205", "FrameworkVersion" -> "public-2.17.205", 
    "PacletBuildDate" -> 
    DateObject[{2018, 4, 12, 2, 0, 29.8383958`9.227350380539981}, "Instant", 
      "Gregorian", 0.], "NotebookBuildDate" -> 
    DateObject[{2018, 4, 12, 3, 26, 51.154897`8.461462189803681}, "Instant", 
      "Gregorian", 0.], "Hash" -> "428c0dc34253f616", "Key" -> 
    "public/pub/p-428c0dc34253f616", "CheckerAPI" -> 
    CloudObject[
     "https://www.wolframcloud.com/objects/wolframchallenges/public/api/\
check"], "SearchNames" -> {"Coins"}, "Status" -> "Published", "Source" -> 
    CloudObject[
     "https://www.wolframcloud.com/objects/wolframchallenges/public/pub/p-\
428c0dc34253f616"], "ReviewNotebook" -> False]},
ShowAutoSpellCheck->False,
Magnification:>0.9 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 20, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], ShowCellBracket -> False, ShowGroupOpener -> False, 
    CellMargins -> {{65.14453125, 30}, {0., 30.}}, 
    CellFrameMargins -> {{66, Inherited}, {Inherited, 20}}, FontFamily -> 
    "Source Sans Pro Light", FontSize -> 50, FontColor -> 
    RGBColor[0.1843137254901961, 0.6509803921568628, 0.6941176470588235]], 
   Cell[
    StyleData["Section"], CellFrame -> {{0, 0}, {0, 1}}, ShowCellBracket -> 
    False, ShowGroupOpener -> False, 
    CellMargins -> {{66, 30}, {Inherited, 35}}, Deployed -> True, 
    CellFrameMargins -> {{0, Inherited}, {Inherited, 10}}, CellFrameColor -> 
    GrayLevel[0.7137], FontFamily -> "Source Sans Pro", FontSize -> 17, 
    FontWeight -> "DemiBold", FontColor -> Hue[0.51, 0.817, 0.72]], 
   Cell[
    StyleData["SectionNoLine", StyleDefinitions -> StyleData["Section"]], 
    CellFrame -> {{0, 0}, {0, 0}}, CellMargins -> {{49, 30}, {4, 0}}], 
   Cell[
    StyleData["SectionOnlyLine", StyleDefinitions -> StyleData["Section"]], 
    CellMargins -> {{66, 30}, {4, 35}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, CellFrameMargins -> 0, 
    FontSize -> 0.1], 
   Cell[
    StyleData["Subsection", StyleDefinitions -> StyleData["Section"]], 
    ShowCellBracket -> True, ShowGroupOpener -> True, WholeCellGroupOpener -> 
    True], 
   Cell[
    StyleData["Text"], ShowCellBracket -> True, 
    CellMargins -> {{66, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Item"], CellDingbat -> 
    StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
      RGBColor[0.21176470588235294`, 0.6941176470588235, 0.7490196078431373]],
     CellMargins -> {{81, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Description"], ShowCellBracket -> False, 
    CellMargins -> {{71, 30}, {0, 10}}, 
    AutoStyleOptions -> {
     "LocalVariableStyle" -> {FontColor -> RGBColor[0.263, 0.537, 0.345]}}, 
    LineSpacing -> {1.2, 0}, FontFamily -> "Source Sans Pro", FontSize -> 20, 
    FontSlant -> "Plain", 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    GrayLevel[0.3]], 
   Cell[
    StyleData["WCIntroDivider"], Editable -> False, Selectable -> False, 
    Deletable -> False, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {-2, 35}}, ShowStringCharacters -> False], 
   Cell[
    StyleData["WCIntroDividerLine", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    CellFrame -> {{0, 0}, {0, 8}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, 
    CellFrameMargins -> {{0, 0}, {-1, 0}}, CellFrameColor -> 
    RGBColor[0.9961, 0.3098, 0.21569], FontSize -> 1], 
   Cell[
    StyleData["SubmitRow"], Editable -> False, Selectable -> False, Deletable -> 
    False, CellFrame -> {{0, 0}, {0, 2}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 30}}, 
    CellGroupingRules -> {"SectionGrouping", -5}, 
    CellFrameMargins -> {{Inherited, Inherited}, {20, 20}}, CellFrameColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["StandardForm"], FontSize -> 16], 
   Cell[
    StyleData["CodeFont"], FontSize -> 
    FEPrivate`If[False, 0.907029 Inherited, Inherited]], 
   Cell[
    StyleData["RefLink"], TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        ButtonBox[#, ButtonData -> #2, BaseStyle -> Dynamic[
           If[
            CurrentValue["MouseOver"], {
            "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
            "Link"}]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {BaseStyle -> "Link"}], 
   Cell[
    StyleData["InlineCode", StyleDefinitions -> StyleData["StandardForm"]]], 
   Cell[
    StyleData["SmallText", StyleDefinitions -> StyleData["Text"]], FontSize -> 
    0.975 Inherited, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.21176470588235294`, 0.7058823529411765, 0.7490196078431373]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["SubmitButton"], ShowCellBracket -> False, 
    CellMargins -> {{66, Inherited}, {25, Inherited}}, ShowCellLabel -> False,
     TextAlignment -> Center, ShowStringCharacters -> False], 
   Cell[
    StyleData["SigninText", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSize -> 12, FontColor -> 
    GrayLevel[0.25]], 
   Cell[
    StyleData["ButtonLabel", StyleDefinitions -> StyleData["Text"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontFamily -> 
    "Source Sans Pro", FontSize -> 18, FontWeight -> "DemiBold", FontColor -> 
    GrayLevel[1]], 
   Cell[
    StyleData[
    "ButtonLabelActive", StyleDefinitions -> StyleData["ButtonLabel"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["Notebook"], ShowAutoSpellCheck -> False]}, Visible -> False, 
  FrontEndVersion -> "12.1 for Microsoft Windows (64-bit) (March 20, 2020)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"2dbf2806-1b3d-417e-82ef-bd5d7f585f14"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "NoLabel"->{
  Cell[12663, 434, 1408, 39, 71, "Input",ExpressionUUID->"b2e21f2b-c064-44a2-82bb-0f84a6deebe4",
   CellTags->"NoLabel"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"NoLabel", 39064, 976}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 94, 0, 84, "Title",ExpressionUUID->"118942b8-3125-4b55-a4f6-cddad76c87c5"],
Cell[677, 24, 691, 21, 62, "WCIntroDivider",ExpressionUUID->"a33d7ce9-5cb9-4a74-8c3c-ac0a3ad37526"],
Cell[1371, 47, 85, 0, 23, "WCIntroDividerLine",ExpressionUUID->"cdf8d3f6-89af-46a2-9176-1bdc0cdb430e"],
Cell[1459, 49, 213, 3, 32, "Description",ExpressionUUID->"9ebff8f2-eb74-4165-9a7b-485b2b82822f"],
Cell[CellGroupData[{
Cell[1697, 56, 86, 0, 66, "Section",ExpressionUUID->"5a03a40f-7786-40dd-9719-b711245dc4e3"],
Cell[1786, 58, 296, 4, 49, "Text",ExpressionUUID->"6a3bdbcf-6c2f-4807-b2d3-a884db56aa04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2119, 67, 102, 0, 66, "Section",ExpressionUUID->"95636ddb-14ab-4510-95b8-d01a990d3e1e"],
Cell[2224, 69, 567, 13, 51, "Text",ExpressionUUID->"1d23666f-e6fa-4f23-a55e-02eece028b34"],
Cell[2794, 84, 179, 3, 27, "Text",ExpressionUUID->"a0e8e527-5b59-499e-96ea-b2655fa95a89"],
Cell[CellGroupData[{
Cell[2998, 91, 391, 13, 26, "Input",ExpressionUUID->"8875a596-28a1-4962-8211-9ddbf9d8d1e9",
 Evaluatable->False],
Cell[3392, 106, 252, 7, 29, "Output",ExpressionUUID->"bd7dff02-1dd8-4998-850c-8b8f14c93fca"]
}, Open  ]],
Cell[3659, 116, 94, 0, 27, "Text",ExpressionUUID->"9736a3bf-031e-413b-ace7-68975903c293"],
Cell[CellGroupData[{
Cell[3778, 120, 356, 11, 26, "Input",ExpressionUUID->"9cfc4a3f-9976-498d-8272-e2819818b885",
 Evaluatable->False],
Cell[4137, 133, 151, 3, 29, "Output",ExpressionUUID->"494cfac7-3338-4367-9616-da5f48e4e6c0"]
}, Open  ]],
Cell[4303, 139, 112, 0, 27, "Text",ExpressionUUID->"cb610fd6-cbed-43ad-9260-28677a6984c8"],
Cell[CellGroupData[{
Cell[4440, 143, 499, 16, 26, "Input",ExpressionUUID->"a7313981-2aab-409d-a4b7-2264a505233f",
 Evaluatable->False],
Cell[4942, 161, 173, 4, 29, "Output",ExpressionUUID->"b2219707-3614-4b9d-aed2-c45113f2fc28"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5164, 171, 90, 0, 66, "Subsection",ExpressionUUID->"6ab2470c-9bbd-4f0b-a31c-18272bd95a7e"],
Cell[CellGroupData[{
Cell[5279, 175, 393, 13, 26, "Input",ExpressionUUID->"af60e295-bc58-4077-b5b9-18f430f3626c",
 Evaluatable->False],
Cell[5675, 190, 252, 7, 29, "Output",ExpressionUUID->"433a5f5d-6eb9-40a6-a8d7-ddabd5d6f4b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5964, 202, 388, 13, 26, "Input",ExpressionUUID->"b222c653-9ab8-46cd-8ea9-c2c703181686",
 Evaluatable->False],
Cell[6355, 217, 252, 7, 29, "Output",ExpressionUUID->"91e01169-7851-4a5f-9f26-56c15bfc48f0"]
}, Open  ]],
Cell[6622, 227, 149, 2, 27, "Text",ExpressionUUID->"89577440-6567-475f-9b0b-2403b30f1caf"],
Cell[CellGroupData[{
Cell[6796, 233, 389, 13, 26, "Input",ExpressionUUID->"5a82b3ef-4863-49c6-8e07-f65b2099e759",
 Evaluatable->False],
Cell[7188, 248, 356, 10, 29, "Output",ExpressionUUID->"b5bf65b6-a999-4efa-886f-4d41907fa45a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7581, 263, 396, 13, 26, "Input",ExpressionUUID->"06a24c54-f995-4131-964d-ddfbeb66b7b5",
 Evaluatable->False],
Cell[7980, 278, 1068, 26, 48, "Output",ExpressionUUID->"f578ed8d-e40c-4222-8362-ed1ca0345441"]
}, Open  ]],
Cell[9063, 307, 155, 4, 27, "Text",ExpressionUUID->"cbb8d1fb-8e80-4a5d-9eff-d1b7edb130e1"],
Cell[CellGroupData[{
Cell[9243, 315, 683, 23, 26, "Input",ExpressionUUID->"c1ef344c-74c8-41fc-932e-cef314382907",
 Evaluatable->False],
Cell[9929, 340, 153, 3, 29, "Output",ExpressionUUID->"9eae8a52-427a-41ab-802c-d254f5cea54e"]
}, Open  ]],
Cell[10097, 346, 129, 0, 27, "Text",ExpressionUUID->"9158e898-9228-4838-92c1-59ace2b81cfe"],
Cell[CellGroupData[{
Cell[10251, 350, 391, 13, 26, "Input",ExpressionUUID->"07c2cd0a-aef0-490f-8663-05f1e8787d31",
 Evaluatable->False],
Cell[10645, 365, 167, 4, 29, "Output",ExpressionUUID->"2df796d0-9066-41c4-a69a-2ecb0a1fa5fa"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10873, 376, 685, 22, 58, "WCIntroDivider",ExpressionUUID->"a9506c77-dc20-43fb-add1-6ff5f15c47a8",
 CellGroupingRules->{"SectionGrouping", 0}],
Cell[11561, 400, 131, 2, 37, "WCIntroDividerLine",ExpressionUUID->"164f68af-3f8a-43be-be4a-e4b0f21d0ec9"],
Cell[11695, 404, 203, 4, 28, "Input",ExpressionUUID->"663347b1-97a4-4534-8674-6a7d23f9fc77"],
Cell[11901, 410, 662, 20, 60, "WCIntroDivider",ExpressionUUID->"f3676864-542c-4b13-9c6b-cd90f01360f9"],
Cell[12566, 432, 94, 0, 37, "WCIntroDividerLine",ExpressionUUID->"cde73b5a-2548-4c52-8e3a-837dbdbe66e2"],
Cell[12663, 434, 1408, 39, 71, "Input",ExpressionUUID->"b2e21f2b-c064-44a2-82bb-0f84a6deebe4",
 CellTags->"NoLabel"]
}, Open  ]],
Cell[14086, 476, 9765, 210, 95, "SubmitRow",ExpressionUUID->"18ae8bca-fdfb-4790-8ec8-e1b2ac8605e1"]
}
]
*)

